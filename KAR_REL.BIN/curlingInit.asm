void curlingInit(int isTutorial) {
  
  store(0x13523A, 0)
  store(0x13523C, 0)
  store(0x13523E, 0)
  
  numNeutralStones = rand() % 3
  playerHead = 0x5B5A0
  playerOffset = 0
  
  for(i = 0; i < 3; i++) {
    curlPtr = playerHead + 8
    rand()
    store(playerHead, 0)
    store(playerHead + 1, 0)
    store(playerHead + 2, 0)
    store(playerHead + 4, 0)
    
    for(j = 0; j < 5; j++) {
    
      playerArray = { 2, 1, 0 } // loaded from 0x5AB80
      weightArray = { 30, 25, 35, 30 } // loaded from 0x134A08
      curlArray = { 3, 2, 2, 1, 1, 1, 0, 0, 0, 0 } // loaded from 0x5AB8C
      
      store(curlPtr + 0x08, 0)
      store(curlPtr + 0x0C, 0)
      store(curlPtr + 0x10, 0)
      store(curlPtr + 0x11, 0)
      
      rngRoll = rand() % 10
      
      if(!isTutorial) 
        store(curlPtr + 0x04, curlArray[rngRoll])
      else {
        store(curlPtr + 0x04, j)
        
        if(j >= 4) 
          store(curlPtr + 0x04, 3)
      }
      
      v1 = load(curlPtr + 0x04) * 3
      a0 = load(0x135240) + 0x0C
      
      0x00099BF8(a0, curlPtr + 0x24, v1 + playerArray[i])
      0x00097D68(0, curlPtr + 0x34)
    
      store(curlPtr + 0x24, 0)
      store(curlPtr + 0x28, curlPtr + 0x34)
      
      if(i < 2) {
        store(curlPtr + 0xA0, -1100 + 170 * j)
        store(curlPtr + 0x9C, (i != 0 ? 550 : -700 - 30 * h))
        
        store(curlPtr + 0xA0, -80 + 170 * j)
        store(curlPtr + 0xA4, 0)
          
        store(curlPtr + 0x94, 150)
        store(curlPtr + 0x96, 0)
        store(curlPtr + 0x98, 0)
        store(curlPtr + 0x9C, (i != 0 ? 700 : -700))
        store(curlPtr + 0xA4, 0)
        store(curlPtr, -1)
      }
      else {
        if(j < numNeutralStones) {
          xArray = { 705, 235, -235 }
          
          store(curlPtr + 0x94, 0)
          store(curlPtr + 0x96, 0)
          store(curlPtr + 0x98, 0)
          store(curlPtr + 0x9C, xArray[j] - rand() % 319)
          store(curlPtr + 0xA0, 0)
          store(curlPtr + 0xA4, (rand() % 1000 + 1000) * -1)
          
          store(curlPtr, 1)
          store(curlPtr + 0x08, 1)
        }
        else {
          store(curlPtr + 0x94, 0)
          store(curlPtr + 0x96, 0)
          store(curlPtr + 0x98, 0)
          store(curlPtr + 0x9C, 0)
          store(curlPtr + 0xA0, 0)
          store(curlPtr + 0xA4, 0)
          
          store(curlPtr, -101)
          store(curlPtr + 0x08, 0)
        }
      }
      
      curlType = load(curlPtr + 0x04)
      weight = weightArray[curlType]
      
      store(curlPtr + 0x06, weight)
      
      curlPtr += 0xAC
    }
    
    playerHead += 0x364
  }
}

0x00053878 addiu sp,sp,0xff88
0x0005387c sw ra,0x0034(sp)
0x00053880 sw fp,0x0030(sp)
0x00053884 sw s7,0x002c(sp)
0x00053888 sw s6,0x0028(sp)
0x0005388c sw s5,0x0024(sp)
0x00053890 sw s4,0x0020(sp)
0x00053894 sw s3,0x001c(sp)
0x00053898 sw s2,0x0018(sp)
0x0005389c sw s1,0x0014(sp)
0x000538a0 sw s0,0x0010(sp)
0x000538a4 sw a0,0x0078(sp)
0x000538a8 jal 0x0009127c
0x000538ac nop
0x000538b0 addiu v1,r0,0x0003
0x000538b4 div v0,v1
0x000538b8 sh r0,-0x68f2(gp)
0x000538bc mfhi v0
0x000538c0 sw v0,0x003c(sp)
0x000538c4 lui v0,0x8006
0x000538c8 addiu v0,v0,0xb5a0
0x000538cc addu v0,v0,r0
0x000538d0 sb r0,-0x68f0(gp)
0x000538d4 sh r0,-0x68ee(gp)
0x000538d8 addu s0,r0,r0
0x000538dc sw v0,0x0044(sp)
0x000538e0 beq r0,r0,0x00053bf4
0x000538e4 sw r0,0x0048(sp)
0x000538e8 lw v0,0x0044(sp)
0x000538ec jal 0x0009127c
0x000538f0 addiu s1,v0,0x0008
0x000538f4 lui v1,0x8006
0x000538f8 lw v0,0x0048(sp)
0x000538fc addiu v1,v1,0xb5a0
0x00053900 addu v0,v1,v0
0x00053904 sb r0,0x0000(v0)
0x00053908 lui v1,0x8006
0x0005390c lw v0,0x0048(sp)
0x00053910 addiu v1,v1,0xb5a1
0x00053914 addu v0,v1,v0
0x00053918 sb r0,0x0000(v0)
0x0005391c lui v1,0x8006
0x00053920 lw v0,0x0048(sp)
0x00053924 addiu v1,v1,0xb5a2
0x00053928 addu v0,v1,v0
0x0005392c sh r0,0x0000(v0)
0x00053930 lui v1,0x8006
0x00053934 lw v0,0x0048(sp)
0x00053938 addiu v1,v1,0xb5a4
0x0005393c addu v0,v1,v0
0x00053940 sh r0,0x0000(v0)
0x00053944 sll v0,s0,0x02
0x00053948 addu s2,r0,r0
0x0005394c addiu fp,s1,0x0024
0x00053950 addiu s3,s1,0x0034
0x00053954 addiu s7,r0,0xfbb4
0x00053958 addu s6,r0,r0
0x0005395c addiu s5,r0,0xffb0
0x00053960 addu s4,r0,r0
0x00053964 beq r0,r0,0x00053bc8
0x00053968 sw v0,0x0040(sp)
0x0005396c lui asmTemp,0x8006
0x00053970 lw a0,-0x5480(asmTemp)
0x00053974 lui t8,0x8006
0x00053978 lui asmTemp,0x8006
0x0005397c lw v1,-0x547c(asmTemp)
0x00053980 sw a0,0x004c(sp)
0x00053984 lui asmTemp,0x8006
0x00053988 lw v0,-0x5478(asmTemp)
0x0005398c sw v1,0x0050(sp)
0x00053990 sw v0,0x0054(sp)
0x00053994 addiu v0,gp,0x8edc
0x00053998 lh a1,0x0000(v0)
0x0005399c lh a0,0x0002(v0)
0x000539a0 lh v1,0x0004(v0)
0x000539a4 addiu t8,t8,0xab8c
0x000539a8 lh v0,0x0006(v0)
0x000539ac addiu t7,sp,0x0060
0x000539b0 sh a1,0x0058(sp)
0x000539b4 sh a0,0x005a(sp)
0x000539b8 sh v1,0x005c(sp)
0x000539bc sh v0,0x005e(sp)
0x000539c0 addiu t9,r0,0x000a
0x000539c4 lb t6,0x0000(t8)
0x000539c8 addiu t9,t9,0xffff
0x000539cc sb t6,0x0000(t7)
0x000539d0 addiu t8,t8,0x0001
0x000539d4 bgtz t9,0x000539c4
0x000539d8 addiu t7,t7,0x0001
0x000539dc jal 0x0009127c
0x000539e0 nop
0x000539e4 addiu v1,r0,0x000a
0x000539e8 div v0,v1
0x000539ec sh r0,0x0008(s1)
0x000539f0 sw r0,0x000c(s1)
0x000539f4 sb r0,0x0010(s1)
0x000539f8 lw v1,0x0078(sp)
0x000539fc mfhi v0
0x00053a00 bne v1,r0,0x00053a18
0x00053a04 sb r0,0x0011(s1)
0x00053a08 addu v0,sp,v0
0x00053a0c lb v0,0x0060(v0)
0x00053a10 beq r0,r0,0x00053a38
0x00053a14 sb v0,0x0004(s1)
0x00053a18 sb s2,0x0004(s1)
0x00053a1c lb v0,0x0004(s1)
0x00053a20 nop
0x00053a24 slti asmTemp,v0,0x0004
0x00053a28 bne asmTemp,r0,0x00053a38
0x00053a2c nop
0x00053a30 addiu v0,r0,0x0003
0x00053a34 sb v0,0x0004(s1)
0x00053a38 lb v1,0x0004(s1)
0x00053a3c lw a0,-0x68ec(gp)
0x00053a40 sll v0,v1,0x01
0x00053a44 add v1,v0,v1
0x00053a48 lw v0,0x0040(sp)
0x00053a4c addiu a0,a0,0x000c
0x00053a50 addu v0,sp,v0
0x00053a54 lw v0,0x004c(v0)
0x00053a58 addu a1,fp,r0
0x00053a5c jal 0x00099bf8
0x00053a60 add a2,v1,v0
0x00053a64 addu a0,r0,r0
0x00053a68 jal 0x00097d68
0x00053a6c addu a1,s3,r0
0x00053a70 sw r0,0x0024(s1)
0x00053a74 slti asmTemp,s0,0x0002
0x00053a78 beq asmTemp,r0,0x00053ad8
0x00053a7c sw s3,0x0028(s1)
0x00053a80 beq s0,r0,0x00053a90
0x00053a84 sw s7,0x00a0(s1)
0x00053a88 beq r0,r0,0x00053a98
0x00053a8c addiu v0,r0,0x0226
0x00053a90 addiu v0,r0,0xfc7c
0x00053a94 sub v0,v0,s6
0x00053a98 sw v0,0x009c(s1)
0x00053a9c sw r0,0x00a4(s1)
0x00053aa0 beq s0,r0,0x00053ab0
0x00053aa4 sw s5,0x00a0(s1)
0x00053aa8 beq r0,r0,0x00053ab4
0x00053aac addiu v0,r0,0x02bc
0x00053ab0 addiu v0,r0,0xfd44
0x00053ab4 sw v0,0x009c(s1)
0x00053ab8 sw r0,0x00a4(s1)
0x00053abc addiu v0,r0,0x0096
0x00053ac0 sh v0,0x0094(s1)
0x00053ac4 sh r0,0x0096(s1)
0x00053ac8 sh r0,0x0098(s1)
0x00053acc addiu v0,r0,0xffff
0x00053ad0 beq r0,r0,0x00053b94
0x00053ad4 sw v0,0x0000(s1)
0x00053ad8 lw v0,0x003c(sp)
0x00053adc nop
0x00053ae0 slt asmTemp,s2,v0
0x00053ae4 beq asmTemp,r0,0x00053b70
0x00053ae8 nop
0x00053aec lui asmTemp,0x8006
0x00053af0 lw a0,-0x5468(asmTemp)
0x00053af4 lui asmTemp,0x8006
0x00053af8 lw v1,-0x5464(asmTemp)
0x00053afc sw a0,0x006c(sp)
0x00053b00 lui asmTemp,0x8006
0x00053b04 lw v0,-0x5460(asmTemp)
0x00053b08 sw v1,0x0070(sp)
0x00053b0c sw v0,0x0074(sp)
0x00053b10 jal 0x0009127c
0x00053b14 sw r0,0x00a0(s1)
0x00053b18 addiu v1,r0,0x013f
0x00053b1c div v0,v1
0x00053b20 addu v0,sp,s4
0x00053b24 lw v0,0x006c(v0)
0x00053b28 mfhi v1
0x00053b2c sub v0,v0,v1
0x00053b30 sw v0,0x009c(s1)
0x00053b34 jal 0x0009127c
0x00053b38 nop
0x00053b3c addiu v1,r0,0x03e8
0x00053b40 div v0,v1
0x00053b44 mfhi v0
0x00053b48 addi v0,v0,0x03e8
0x00053b4c sub v0,r0,v0
0x00053b50 sw v0,0x00a4(s1)
0x00053b54 sh r0,0x0094(s1)
0x00053b58 sh r0,0x0096(s1)
0x00053b5c sh r0,0x0098(s1)
0x00053b60 addiu v0,r0,0x0001
0x00053b64 sw v0,0x0000(s1)
0x00053b68 beq r0,r0,0x00053b94
0x00053b6c sh r0,0x0008(s1)
0x00053b70 sw r0,0x00a0(s1)
0x00053b74 sw r0,0x009c(s1)
0x00053b78 sw r0,0x00a4(s1)
0x00053b7c sh r0,0x0094(s1)
0x00053b80 sh r0,0x0096(s1)
0x00053b84 sh r0,0x0098(s1)
0x00053b88 addiu v0,r0,0xff9b
0x00053b8c sw v0,0x0000(s1)
0x00053b90 sh r0,0x0008(s1)
0x00053b94 lb v0,0x0004(s1)
0x00053b98 addi s2,s2,0x0001
0x00053b9c sll v0,v0,0x01
0x00053ba0 addu v0,sp,v0
0x00053ba4 lh v0,0x0058(v0)
0x00053ba8 addi s4,s4,0x0004
0x00053bac sh v0,0x0006(s1)
0x00053bb0 addi s5,s5,0x00aa
0x00053bb4 addi s6,s6,0x001e
0x00053bb8 addi s7,s7,0x00aa
0x00053bbc addiu s1,s1,0x00ac
0x00053bc0 addiu s3,s3,0x00ac
0x00053bc4 addiu fp,fp,0x00ac
0x00053bc8 slti asmTemp,s2,0x0005
0x00053bcc bne asmTemp,r0,0x0005396c
0x00053bd0 nop
0x00053bd4 lw v0,0x0048(sp)
0x00053bd8 addi s0,s0,0x0001
0x00053bdc addi v0,v0,0x0364
0x00053be0 sw v0,0x0048(sp)
0x00053be4 lw v0,0x0044(sp)
0x00053be8 nop
0x00053bec addi v0,v0,0x0364
0x00053bf0 sw v0,0x0044(sp)
0x00053bf4 slti asmTemp,s0,0x0003
0x00053bf8 bne asmTemp,r0,0x000538e8
0x00053bfc nop
0x00053c00 lw ra,0x0034(sp)
0x00053c04 lw fp,0x0030(sp)
0x00053c08 lw s7,0x002c(sp)
0x00053c0c lw s6,0x0028(sp)
0x00053c10 lw s5,0x0024(sp)
0x00053c14 lw s4,0x0020(sp)
0x00053c18 lw s3,0x001c(sp)
0x00053c1c lw s2,0x0018(sp)
0x00053c20 lw s1,0x0014(sp)
0x00053c24 lw s0,0x0010(sp)
0x00053c28 jr ra
0x00053c2c addiu sp,sp,0x0078