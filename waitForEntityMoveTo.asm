// Bug: can softlock if axis speed is 0
int waitForEntityMoveTo(scriptId1, scriptId2, targetPosX, targetPosZ, duration, val6) {
  entityPtr, entityId = loadEntityDataFromScriptId(scriptId1)
  locationPtr = load(entityPtr + 0x04)
  
  if(load(0x134C80) == 0) {
    if(scriptId2 == -1) {
      store(0x134C98, (targetPosX - load(locationPtr + 0x78)) / duration)
      store(0x134C9A, (targetPosZ - load(locationPtr + 0x80)) / duration)
    }
    else {
      otherEntityPtr = loadEntityDataFromScriptId(scriptId2)
      otherLocationPtr = load(otherEntityPtr + 0x04)
      
      store(0x134C98, (load(otherLocationPtr + 0x78) - load(locationPtr + 0x78)) / duration)
      store(0x134C9A, (load(otherLocationPtr + 0x80) - load(locationPtr + 0x80)) / duration)
    }
    
    store(0x134C80, 1)
    
    store(0x1387A8, load(locationPtr + 0x78))
    store(0x1387AC, load(locationPtr + 0x7C))
    store(0x1387B0, load(locationPtr + 0x80))
    store(0x1387B4, load(locationPtr + 0x84))
  }
  else {
    posX = load(locationPtr + 0x78) + load(0x134C98)
    posY = load(locationPtr + 0x7C)
    posZ = load(locationPtr + 0x80) + load(0x134C9A)
    
    setEntityPosition(entityId, posX, posY, posZ)
    setupEntityMatrix(entityId)
    
    isOnX = 0
    isOnY = 0
    
    if(load(0x134C98) < 0) {
      if(targetPosX < load(locationPtr + 0x78)) {
        store(locationPtr + 0x78, targetPosX)
        isOnX = 1
      }
    }
    else {
      if(load(locationPtr + 0x78) < targetPosX) {
        store(locationPtr + 0x78, targetPosX)
        isOnX = 1
      }
    }
    
    if(load(0x134C9A) < 0) {
      if(targetPosZ < load(locationPtr + 0x80)) {
        store(locationPtr + 0x80, targetPosZ)
        isOnY = 1
      }
    }
    else {
      if(load(locationPtr + 0x80) < targetPosZ) {
        store(locationPtr + 0x80, targetPosZ)
        isOnY = 1
      }
    }
    
    if(isOnX == 1 && isOnY == 1) {
      store(0x134C80, 0)
      return 1
    }
  }
  
  if(val6 == 1) {
    0x000D892C(0x1387A8, locationPtr + 0x78)
    
    store(0x1387A8, load(locationPtr + 0x78))
    store(0x1387AC, load(locationPtr + 0x7C))
    store(0x1387B0, load(locationPtr + 0x80))
    store(0x1387B4, load(locationPtr + 0x8C))
  }
  
  return 0
}

0x000ac58c addiu sp,sp,0xffd8
0x000ac590 sw ra,0x0024(sp)
0x000ac594 sw s4,0x0020(sp)
0x000ac598 sw s3,0x001c(sp)
0x000ac59c sw s2,0x0018(sp)
0x000ac5a0 sw s1,0x0014(sp)
0x000ac5a4 sw a0,0x0028(sp)
0x000ac5a8 lb s2,0x0038(sp)
0x000ac5ac lb s4,0x003c(sp)
0x000ac5b0 sw s0,0x0010(sp)
0x000ac5b4 sw a1,0x002c(sp)
0x000ac5b8 addu s1,a2,r0
0x000ac5bc addu s3,a3,r0
0x000ac5c0 jal 0x000ac2f8
0x000ac5c4 addiu a0,sp,0x0028
0x000ac5c8 lb v1,-0x6eac(gp)
0x000ac5cc nop
0x000ac5d0 bne v1,r0,0x000ac6d4
0x000ac5d4 addu s0,v0,r0
0x000ac5d8 lbu v0,0x002c(sp)
0x000ac5dc addiu asmTemp,r0,0x00ff
0x000ac5e0 bne v0,asmTemp,0x000ac62c
0x000ac5e4 nop
0x000ac5e8 lw v0,0x0004(s0)
0x000ac5ec addu v1,s2,r0
0x000ac5f0 lw v0,0x0078(v0)
0x000ac5f4 nop
0x000ac5f8 sub v0,s1,v0
0x000ac5fc div v0,s2
0x000ac600 mflo v0
0x000ac604 sh v0,-0x6e94(gp)
0x000ac608 lw v0,0x0004(s0)
0x000ac60c nop
0x000ac610 lw v0,0x0080(v0)
0x000ac614 nop
0x000ac618 sub v0,s3,v0
0x000ac61c div v0,v1
0x000ac620 mflo v0
0x000ac624 beq r0,r0,0x000ac694
0x000ac628 sh v0,-0x6e92(gp)
0x000ac62c jal 0x000ac2f8
0x000ac630 addiu a0,sp,0x002c
0x000ac634 lw v1,0x0004(v0)
0x000ac638 nop
0x000ac63c lw a0,0x0078(v1)
0x000ac640 lw v1,0x0004(s0)
0x000ac644 nop
0x000ac648 lw v1,0x0078(v1)
0x000ac64c nop
0x000ac650 sub v1,a0,v1
0x000ac654 div v1,s2
0x000ac658 addu a0,s2,r0
0x000ac65c mflo v1
0x000ac660 sh v1,-0x6e94(gp)
0x000ac664 lw v0,0x0004(v0)
0x000ac668 nop
0x000ac66c lw v1,0x0080(v0)
0x000ac670 lw v0,0x0004(s0)
0x000ac674 nop
0x000ac678 lw v0,0x0080(v0)
0x000ac67c nop
0x000ac680 sub v0,v1,v0
0x000ac684 div v0,a0
0x000ac688 mflo v0
0x000ac68c sh v0,-0x6e92(gp)
0x000ac690 nop
0x000ac694 addiu v0,r0,0x0001
0x000ac698 sb v0,-0x6eac(gp)
0x000ac69c lw v0,0x0004(s0)
0x000ac6a0 lui asmTemp,0x8014
0x000ac6a4 lw a1,0x0078(v0)
0x000ac6a8 lw a0,0x007c(v0)
0x000ac6ac lw v1,0x0080(v0)
0x000ac6b0 lw v0,0x0084(v0)
0x000ac6b4 sw a1,-0x7858(asmTemp)
0x000ac6b8 lui asmTemp,0x8014
0x000ac6bc sw a0,-0x7854(asmTemp)
0x000ac6c0 lui asmTemp,0x8014
0x000ac6c4 sw v1,-0x7850(asmTemp)
0x000ac6c8 lui asmTemp,0x8014
0x000ac6cc beq r0,r0,0x000ac7e8
0x000ac6d0 sw v0,-0x784c(asmTemp)
0x000ac6d4 lw a2,0x0004(s0)
0x000ac6d8 lh a1,-0x6e94(gp)
0x000ac6dc lw v0,0x0078(a2)
0x000ac6e0 lh v1,-0x6e92(gp)
0x000ac6e4 add a1,v0,a1
0x000ac6e8 lw v0,0x0080(a2)
0x000ac6ec lbu a0,0x0028(sp)
0x000ac6f0 lw a2,0x007c(a2)
0x000ac6f4 jal 0x000a1540
0x000ac6f8 add a3,v0,v1
0x000ac6fc lbu a0,0x0028(sp)
0x000ac700 jal 0x000a14c0
0x000ac704 nop
0x000ac708 sll v1,r0,0x18
0x000ac70c lh v0,-0x6e94(gp)
0x000ac710 addu a0,r0,r0
0x000ac714 bgez v0,0x000ac744
0x000ac718 sra v1,v1,0x18
0x000ac71c lw a1,0x0004(s0)
0x000ac720 nop
0x000ac724 lw v0,0x0078(a1)
0x000ac728 nop
0x000ac72c slt asmTemp,s1,v0
0x000ac730 bne asmTemp,r0,0x000ac768
0x000ac734 nop
0x000ac738 sw s1,0x0078(a1)
0x000ac73c beq r0,r0,0x000ac768
0x000ac740 addiu v1,r0,0x0001
0x000ac744 lw a1,0x0004(s0)
0x000ac748 nop
0x000ac74c lw v0,0x0078(a1)
0x000ac750 nop
0x000ac754 slt asmTemp,v0,s1
0x000ac758 bne asmTemp,r0,0x000ac768
0x000ac75c nop
0x000ac760 sw s1,0x0078(a1)
0x000ac764 addiu v1,r0,0x0001
0x000ac768 lh v0,-0x6e92(gp)
0x000ac76c nop
0x000ac770 bgez v0,0x000ac7a0
0x000ac774 nop
0x000ac778 lw a1,0x0004(s0)
0x000ac77c nop
0x000ac780 lw v0,0x0080(a1)
0x000ac784 nop
0x000ac788 slt asmTemp,s3,v0
0x000ac78c bne asmTemp,r0,0x000ac7c4
0x000ac790 nop
0x000ac794 sw s3,0x0080(a1)
0x000ac798 beq r0,r0,0x000ac7c4
0x000ac79c addiu a0,r0,0x0001
0x000ac7a0 lw a1,0x0004(s0)
0x000ac7a4 nop
0x000ac7a8 lw v0,0x0080(a1)
0x000ac7ac nop
0x000ac7b0 slt asmTemp,v0,s3
0x000ac7b4 bne asmTemp,r0,0x000ac7c4
0x000ac7b8 nop
0x000ac7bc sw s3,0x0080(a1)
0x000ac7c0 addiu a0,r0,0x0001
0x000ac7c4 addiu asmTemp,r0,0x0001
0x000ac7c8 bne v1,asmTemp,0x000ac7e8
0x000ac7cc nop
0x000ac7d0 addiu asmTemp,r0,0x0001
0x000ac7d4 bne a0,asmTemp,0x000ac7e8
0x000ac7d8 nop
0x000ac7dc sb r0,-0x6eac(gp)
0x000ac7e0 beq r0,r0,0x000ac840
0x000ac7e4 addiu v0,r0,0x0001
0x000ac7e8 addiu asmTemp,r0,0x0001
0x000ac7ec bne s4,asmTemp,0x000ac83c
0x000ac7f0 nop
0x000ac7f4 lw v0,0x0004(s0)
0x000ac7f8 lui a0,0x8014
0x000ac7fc addiu a0,a0,0x87a8
0x000ac800 jal 0x000d892c
0x000ac804 addiu a1,v0,0x0078
0x000ac808 lw v0,0x0004(s0)
0x000ac80c lui asmTemp,0x8014
0x000ac810 lw a1,0x0078(v0)
0x000ac814 lw a0,0x007c(v0)
0x000ac818 lw v1,0x0080(v0)
0x000ac81c lw v0,0x0084(v0)
0x000ac820 sw a1,-0x7858(asmTemp)
0x000ac824 lui asmTemp,0x8014
0x000ac828 sw a0,-0x7854(asmTemp)
0x000ac82c lui asmTemp,0x8014
0x000ac830 sw v1,-0x7850(asmTemp)
0x000ac834 lui asmTemp,0x8014
0x000ac838 sw v0,-0x784c(asmTemp)
0x000ac83c addu v0,r0,r0
0x000ac840 lw ra,0x0024(sp)
0x000ac844 lw s4,0x0020(sp)
0x000ac848 lw s3,0x001c(sp)
0x000ac84c lw s2,0x0018(sp)
0x000ac850 lw s1,0x0014(sp)
0x000ac854 lw s0,0x0010(sp)
0x000ac858 jr ra
0x000ac85c addiu sp,sp,0x0028