// recalc PP
void recalculatePPandArena() {
  // prosperity part
  prosperity = 0
  
  for(s0 = 3; s0 < 59; s0++) {
    level = load(0x12CED1 + s0 * 0x34)
    
    if(level < 3) // Fresh / In Training
      continue
      
    if(isTriggerSet(200 + s0) == 0)
      continue
    
    if(s0 == 11 || s0 == 39 || s0 == 53) {
      prosperity += 1
      continue
    }
    
    ppValue = level - 2
    prosperity += ppValue
  }
  
  setPStat(1, prosperity)
  
  // arena part
  if(readPStat(3) < 23)
    return
    
  if(isTriggerSet(37) != 0)
    unsetTrigger(37)
    
  if(isTriggerSet(38) != 0)
    unsetTrigger(38)
    
  if(isTriggerSet(39) != 0)
    unsetTrigger(39)
}

0x000efa18 addiu sp,sp,0xffd8
0x000efa1c sw ra,0x0020(sp)
0x000efa20 sw s3,0x001c(sp)
0x000efa24 sw s2,0x0018(sp)
0x000efa28 sw s1,0x0014(sp)
0x000efa2c sw s0,0x0010(sp)
0x000efa30 addu s1,r0,r0
0x000efa34 addiu s0,r0,0x0003
0x000efa38 addiu s2,r0,0x009c
0x000efa3c beq r0,r0,0x000efad4
0x000efa40 addiu s3,r0,0x00cb
0x000efa44 lui v0,0x8013
0x000efa48 addiu v0,v0,0xced1
0x000efa4c addu v0,v0,s2
0x000efa50 lbu v0,0x0000(v0)
0x000efa54 nop
0x000efa58 sltiu asmTemp,v0,0x0003
0x000efa5c bne asmTemp,r0,0x000efac8
0x000efa60 nop
0x000efa64 jal 0x0010643c
0x000efa68 andi a0,s3,0xffff
0x000efa6c beq v0,r0,0x000efac8
0x000efa70 nop
0x000efa74 addiu asmTemp,r0,0x000b
0x000efa78 beq s0,asmTemp,0x000efa98
0x000efa7c nop
0x000efa80 addiu asmTemp,r0,0x0027
0x000efa84 beq s0,asmTemp,0x000efa98
0x000efa88 nop
0x000efa8c addiu asmTemp,r0,0x0035
0x000efa90 bne s0,asmTemp,0x000efaa4
0x000efa94 nop
0x000efa98 addiu v0,s1,0x0001
0x000efa9c beq r0,r0,0x000efac8
0x000efaa0 andi s1,v0,0x00ff
0x000efaa4 lui v0,0x8013
0x000efaa8 addiu v0,v0,0xced1
0x000efaac addu v0,v0,s2
0x000efab0 lbu v0,0x0000(v0)
0x000efab4 nop
0x000efab8 addi v0,v0,-0x0002
0x000efabc andi v0,v0,0x00ff
0x000efac0 addu v0,s1,v0
0x000efac4 andi s1,v0,0x00ff
0x000efac8 addi s0,s0,0x0001
0x000efacc addi s3,s3,0x0001
0x000efad0 addi s2,s2,0x0034
0x000efad4 slti asmTemp,s0,0x003b
0x000efad8 bne asmTemp,r0,0x000efa44
0x000efadc nop
0x000efae0 addiu a0,r0,0x0001
0x000efae4 jal 0x00106474
0x000efae8 addu a1,s1,r0
0x000efaec jal 0x001062e0
0x000efaf0 addiu a0,r0,0x0003
0x000efaf4 andi s1,v0,0x00ff
0x000efaf8 sltiu asmTemp,s1,0x0017
0x000efafc bne asmTemp,r0,0x000efb4c
0x000efb00 nop
0x000efb04 jal 0x0010643c
0x000efb08 addiu a0,r0,0x0025
0x000efb0c beq v0,r0,0x000efb1c
0x000efb10 nop
0x000efb14 jal 0x001065fc
0x000efb18 addiu a0,r0,0x0025
0x000efb1c jal 0x0010643c
0x000efb20 addiu a0,r0,0x0026
0x000efb24 beq v0,r0,0x000efb34
0x000efb28 nop
0x000efb2c jal 0x001065fc
0x000efb30 addiu a0,r0,0x0026
0x000efb34 jal 0x0010643c
0x000efb38 addiu a0,r0,0x0027
0x000efb3c beq v0,r0,0x000efb4c
0x000efb40 nop
0x000efb44 jal 0x001065fc
0x000efb48 addiu a0,r0,0x0027
0x000efb4c lw ra,0x0020(sp)
0x000efb50 lw s3,0x001c(sp)
0x000efb54 lw s2,0x0018(sp)
0x000efb58 lw s1,0x0014(sp)
0x000efb5c lw s0,0x0010(sp)
0x000efb60 jr ra
0x000efb64 addiu sp,sp,0x0028