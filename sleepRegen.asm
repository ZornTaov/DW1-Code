void sleepRegen() {
  standardSleepTime = load(0x13846E)
  currentHour = load(0x134EBC)
  wakeupHour = load(0x138468)

  // get hours slept
  if(currentHour < wakeupHour) 
    hoursSlept = wakeupHour - currentHour
  else 
    hoursSlept = 24 - currentHour + wakeupHour

  if(load(0x134EBE) != 0 && load(0x138464) != currentHour) // current minute and sleepy hour
      hoursSlept += 1
  
  // calculate sleep factor
  sleepFactor = hoursSlept * 100 / standardSleepTime
  
  // add pillow factor
  if(getItemCount(34) != 0) { // pillow count
    sleepFactor = sleepFactor * 12 / 10
  }
  
  // add area factor
  areaLiked = load(0x150C3E) // 1 = like area, 2 = disliked area

  if(areaLiked == 1) 
    sleepFactor = sleepFactor * 12 / 10
  else if(areaLiked == 2) 
    sleepFactor = sleepFactor * 8 / 10

  // regeneration
  maxHP = load(0x1557F0)
  maxMP = load(0x1557F2)
  baseFactor = random(10) + 70

  // HP regeneration
  regenHP = (maxHP * baseFactor / 100) * sleepFactor / 100
  currentHP = load(0x1557F4)
  store(0x1557F4, currentHP + regenHP)

  // MP regeneration
  regenMP = (maxMP * baseFactor / 100) * sleepFactor / 100
  currentMP = load(0x1557F6)
  store(0x1557F6, currentMP + regenMP)

  // tiredness regeneration
  tirednessBase = random(20) + 80
  tiredness = load(0x138482)

  newTiredness = tiredness - ((tiredness * tirednessBase / 100) * sleepFactor / 100)
  store(0x138482, newTiredness)

  // HP bound check
  currentHP = load(0x1557F4) // signed short, can overflow

  if(currentHP > maxHP)
    store(0x1557F4, maxHP)
    
  // MP bound check
  currentMP = load(0x1557F6) // signed short, can overflow

  if(currentMP > maxMP)
    store(0x1557F6, maxMP)
  
  // tiredness bound check
  tiredness = load(0x138482)

  if(tiredness < 0)
    store(0x138482, 0)
    
  // weight reduction
  digimonType = load(0x1557A8)

  defaultWeight = load(0x1225D1 + digimonType * 28)
  currentWeight = load(0x1384A2)
  store(0x1384A2, currentWeight - defaultWeight / 10)

  // weight bound check
  if(currentWeight - defaultWeight / 10 <= 0)
    store(0x1384A2, 1)
}

0x000a6d00 lui asmTemp,0x8014
0x000a6d04 addiu sp, sp, 0xffd8
0x000a6d08 lh a0,-0x7b92(asmTemp)
0x000a6d0c sw ra,0x0020(sp)
0x000a6d10 sw s3,0x001c(sp)
0x000a6d14 lui asmTemp,0x8014
0x000a6d18 sw s2,0x0018(sp)
0x000a6d1c lh v1,-0x6c70(gp)
0x000a6d20 lh v0,-0x7b98(asmTemp)
0x000a6d24 sw s1,0x0014(sp)
0x000a6d28 sw s0,0x0010(sp)
0x000a6d2c addu a1,v1,r0
0x000a6d30 slt asmTemp,v1,v0
0x000a6d34 beq asmTemp,r0,0x000a6d4c
0x000a6d38 addu a2,v0,r0
0x000a6d3c sub v0,a2,a1
0x000a6d40 sll v1,v0,0x10
0x000a6d44 beq r0,r0,0x000a6d60
0x000a6d48 sra v1,v1,0x10
0x000a6d4c addiu v0,r0,0x0018
0x000a6d50 sub v0,v0,a1
0x000a6d54 add v0,a2,v0
0x000a6d58 sll v1,v0,0x10
0x000a6d5c sra v1,v1,0x10
0x000a6d60 lh v0,-0x6c6e(gp)
0x000a6d64 nop
0x000a6d68 blez v0,0x000a6d90
0x000a6d6c nop
0x000a6d70 lui asmTemp,0x8014
0x000a6d74 lh v0,-0x7b9c(asmTemp)
0x000a6d78 nop
0x000a6d7c beq a1,v0,0x000a6d90
0x000a6d80 nop
0x000a6d84 addi v0,v1,0x0001
0x000a6d88 sll v1,v0,0x10
0x000a6d8c sra v1,v1,0x10
0x000a6d90 sll v0,v1,0x02
0x000a6d94 add v1,v0,v1
0x000a6d98 sll v0,v1,0x02
0x000a6d9c add v0,v1,v0
0x000a6da0 sll v0,v0,0x02
0x000a6da4 div v0,a0
0x000a6da8 mflo v0
0x000a6dac sll s0,v0,0x10
0x000a6db0 sra s0,s0,0x10
0x000a6db4 jal 0x000c51e0
0x000a6db8 addiu a0,r0,0x0022
0x000a6dbc beq v0,r0,0x000a6df4
0x000a6dc0 nop
0x000a6dc4 sll v0,s0,0x01
0x000a6dc8 add v0,v0,s0
0x000a6dcc sll v1,v0,0x02
0x000a6dd0 lui v0,0x6666
0x000a6dd4 ori v0,v0,0x6667
0x000a6dd8 mult v0,v1
0x000a6ddc mfhi v0
0x000a6de0 srl v1,v1,0x1f
0x000a6de4 sra v0,v0,0x02
0x000a6de8 addu v0,v0,v1
0x000a6dec sll s0,v0,0x10
0x000a6df0 sra s0,s0,0x10
0x000a6df4 lui asmTemp,0x8015
0x000a6df8 lb v0,0x0c3e(asmTemp)
0x000a6dfc addiu asmTemp,r0,0x0001
0x000a6e00 bne v0,asmTemp,0x000a6e3c
0x000a6e04 addu v1,v0,r0
0x000a6e08 sll v0,s0,0x01
0x000a6e0c add v0,v0,s0
0x000a6e10 sll v1,v0,0x02
0x000a6e14 lui v0,0x6666
0x000a6e18 ori v0,v0,0x6667
0x000a6e1c mult v0,v1
0x000a6e20 mfhi v0
0x000a6e24 srl v1,v1,0x1f
0x000a6e28 sra v0,v0,0x02
0x000a6e2c addu v0,v0,v1
0x000a6e30 sll s0,v0,0x10
0x000a6e34 beq r0,r0,0x000a6e70
0x000a6e38 sra s0,s0,0x10
0x000a6e3c addiu asmTemp,r0,0x0002
0x000a6e40 bne v1,asmTemp,0x000a6e70
0x000a6e44 nop
0x000a6e48 lui v0,0x6666
0x000a6e4c sll v1,s0,0x03
0x000a6e50 ori v0,v0,0x6667
0x000a6e54 mult v0,v1
0x000a6e58 mfhi v0
0x000a6e5c srl v1,v1,0x1f
0x000a6e60 sra v0,v0,0x02
0x000a6e64 addu v0,v0,v1
0x000a6e68 sll s0,v0,0x10
0x000a6e6c sra s0,s0,0x10
0x000a6e70 lui asmTemp,0x8015
0x000a6e74 lh s2,0x57f0(asmTemp)
0x000a6e78 lui asmTemp,0x8015
0x000a6e7c lh s1,0x57f2(asmTemp)
0x000a6e80 jal 0x000a36d4
0x000a6e84 addiu a0,r0,0x000a
0x000a6e88 sll v0,v0,0x10
0x000a6e8c sra v0,v0,0x10
0x000a6e90 addi v0,v0,0x0046
0x000a6e94 mult s2,v0
0x000a6e98 addu a1,v0,r0
0x000a6e9c lui v0,0x51eb
0x000a6ea0 mflo v1
0x000a6ea4 ori v0,v0,0x851f
0x000a6ea8 nop
0x000a6eac mult v0,v1
0x000a6eb0 srl a0,v1,0x1f
0x000a6eb4 mfhi v1
0x000a6eb8 sra v1,v1,0x05
0x000a6ebc addu v1,v1,a0
0x000a6ec0 mult s0,v1
0x000a6ec4 lui asmTemp,0x8015
0x000a6ec8 mflo a0
0x000a6ecc addu v1,v0,r0
0x000a6ed0 nop
0x000a6ed4 mult v1,a0
0x000a6ed8 addu s3,s0,r0
0x000a6edc mfhi v1
0x000a6ee0 srl a0,a0,0x1f
0x000a6ee4 sra v1,v1,0x05
0x000a6ee8 addu a0,v1,a0
0x000a6eec lh v1,0x57f4(asmTemp)
0x000a6ef0 sll a0,a0,0x10
0x000a6ef4 sra a0,a0,0x10
0x000a6ef8 add v1,v1,a0
0x000a6efc lui asmTemp,0x8015
0x000a6f00 sh v1,0x57f4(asmTemp)
0x000a6f04 mult s1,a1
0x000a6f08 addu v1,v0,r0
0x000a6f0c mflo a0
0x000a6f10 nop
0x000a6f14 nop
0x000a6f18 mult v1,a0
0x000a6f1c lui asmTemp,0x8015
0x000a6f20 mfhi v1
0x000a6f24 srl a0,a0,0x1f
0x000a6f28 sra v1,v1,0x05
0x000a6f2c addu v1,v1,a0
0x000a6f30 mult s3,v1
0x000a6f34 mflo v1
0x000a6f38 nop
0x000a6f3c nop
0x000a6f40 mult v0,v1
0x000a6f44 mfhi v0
0x000a6f48 srl v1,v1,0x1f
0x000a6f4c sra v0,v0,0x05
0x000a6f50 addu v1,v0,v1
0x000a6f54 lh v0,0x57f6(asmTemp)
0x000a6f58 sll v1,v1,0x10
0x000a6f5c sra v1,v1,0x10
0x000a6f60 add v0,v0,v1
0x000a6f64 lui asmTemp,0x8015
0x000a6f68 sh v0,0x57f6(asmTemp)
0x000a6f6c jal 0x000a36d4
0x000a6f70 addiu a0,r0,0x0014
0x000a6f74 sll v0,v0,0x10
0x000a6f78 lui asmTemp,0x8014
0x000a6f7c sra v0,v0,0x10
0x000a6f80 lh a1,-0x7b7e(asmTemp)
0x000a6f84 addi v0,v0,0x0050
0x000a6f88 mult a1,v0
0x000a6f8c lui asmTemp,0x8014
0x000a6f90 lui v0,0x51eb
0x000a6f94 mflo v1
0x000a6f98 ori a0,v0,0x851f
0x000a6f9c nop
0x000a6fa0 mult a0,v1
0x000a6fa4 mfhi v0
0x000a6fa8 srl v1,v1,0x1f
0x000a6fac sra v0,v0,0x05
0x000a6fb0 addu v0,v0,v1
0x000a6fb4 mult s3,v0
0x000a6fb8 mflo v0
0x000a6fbc nop
0x000a6fc0 nop
0x000a6fc4 mult a0,v0
0x000a6fc8 srl v1,v0,0x1f
0x000a6fcc mfhi v0
0x000a6fd0 sra v0,v0,0x05
0x000a6fd4 addu v0,v0,v1
0x000a6fd8 sll v0,v0,0x10
0x000a6fdc sra v0,v0,0x10
0x000a6fe0 sub v0,a1,v0
0x000a6fe4 sh v0,-0x7b7e(asmTemp)
0x000a6fe8 lui asmTemp,0x8015
0x000a6fec lh v0,0x57f4(asmTemp)
0x000a6ff0 nop
0x000a6ff4 slt asmTemp,v0,s2
0x000a6ff8 bne asmTemp,r0,0x000a7008
0x000a6ffc nop
0x000a7000 lui asmTemp,0x8015
0x000a7004 sh s2,0x57f4(asmTemp)
0x000a7008 lui asmTemp,0x8015
0x000a700c lh v0,0x57f6(asmTemp)
0x000a7010 nop
0x000a7014 slt asmTemp,v0,s1
0x000a7018 bne asmTemp,r0,0x000a7028
0x000a701c nop
0x000a7020 lui asmTemp,0x8015
0x000a7024 sh s1,0x57f6(asmTemp)
0x000a7028 lui asmTemp,0x8014
0x000a702c lh v0,-0x7b7e(asmTemp)
0x000a7030 nop
0x000a7034 bgez v0,0x000a7044
0x000a7038 nop
0x000a703c lui asmTemp,0x8014
0x000a7040 sh r0,-0x7b7e(asmTemp)
0x000a7044 lui asmTemp,0x8013
0x000a7048 lw v0,-0x0cb8(asmTemp)
0x000a704c nop
0x000a7050 lw v1,0x0000(v0)
0x000a7054 lui asmTemp,0x8014
0x000a7058 sll v0,v1,0x03
0x000a705c sub v0,v0,v1
0x000a7060 sll v1,v0,0x02
0x000a7064 lui v0,0x8012
0x000a7068 addiu v0,v0,0x25d1
0x000a706c addu v0,v0,v1
0x000a7070 lbu v1,0x0000(v0)
0x000a7074 lui v0,0x6666
0x000a7078 ori v0,v0,0x6667
0x000a707c mult v0,v1
0x000a7080 mfhi v0
0x000a7084 srl v1,v1,0x1f
0x000a7088 sra v0,v0,0x02
0x000a708c addu v1,v0,v1
0x000a7090 lh v0,-0x7b5e(asmTemp)
0x000a7094 sll v1,v1,0x10
0x000a7098 sra v1,v1,0x10
0x000a709c sub v0,v0,v1
0x000a70a0 lui asmTemp,0x8014
0x000a70a4 sh v0,-0x7b5e(asmTemp)
0x000a70a8 lui asmTemp,0x8014
0x000a70ac lh v0,-0x7b5e(asmTemp)
0x000a70b0 nop
0x000a70b4 bgtz v0,0x000a70c8
0x000a70b8 nop
0x000a70bc addiu v0,r0,0x0001
0x000a70c0 lui asmTemp,0x8014
0x000a70c4 sh v0,-0x7b5e(asmTemp)
0x000a70c8 lw ra,0x0020(sp)
0x000a70cc lw s3,0x001c(sp)
0x000a70d0 lw s2,0x0018(sp)
0x000a70d4 lw s1,0x0014(sp)
0x000a70d8 lw s0,0x0010(sp)
0x000a70dc jr ra
0x000a70e0 addiu sp,sp,0x0028
