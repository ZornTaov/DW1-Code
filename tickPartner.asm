void tickPartner() {
  if(load(0x134F0A) != 0) // some state?
    return
  
  if(load(0x134C5B) != 1) // digimon state?
    return
  
  if(load(0x134E20) == 0) // isTimeRunning?
    return
  
  if(load(0x134F06) == load(0x134F08)) // game frame actually advanced
    return
  
  if(load(0x134CB8) == 1)
    return
  
  digimonType = load(0x1557A8)
  
  tickDeathCondition()
  tickSleepMechanics()
  tickSicknessMechanics()
  tickTirednessMechanics()
  tickHungerMechanics()
  tickUnhappinessMechanics()
  tickConditionBoundaries()
  
  store(0x138494, load(0x138494) + 1) // area effect timer
  
  if(areaEffectTimer > 28800) // 24h have accumulated
    store(0x138494, 0)
  
  trainingBoostTimer = load(0x1384B0) - 1
  store(0x1384B0, trainingBoostTimer)
  
  if(trainingBoostTimer < 0) {
    store(0x1384B0, 0)
    store(0x1384AC, 0)
  }
  
  // happiness lifetime penalty code
  if(load(0x134F08) % 4800 == 0) { // 4h game time have passed
    happiness = load(0x13848A)
    
    if(happiness < 80) {
      lifetimePenalty = -0.02 * (happiness - 80) + 1
      
      newLifetime = load(0x1384A8) - lifetimePenalty
      store(0x1384A8, newLifetime)
      
      if(newLifetime < 0)
        store(0x1384A8, 0)
    }
  }
  
  if(0x000D7618() == 0) // TODO name
    return
  
  // prevents the subsequent code (natural evolutions, death) to execute during a locked hour
  transLockActive = load(0x134CA8)
  transLockHour = load(0x134CA4)
  currentHour = load(0x134EBC)
  
  if(transLockActive == 1) {
    if(transLockHour == currentHour)
      return
    else {
      store(0x134CA8, 0)
      store(0x134CA4, -1)
    }
  }
  
  evoTimer = load(0x1384B6)
  partnerLevel = load(0x12CED1 + digimonType * 52)
  
  // natural evolution code
  // Note: removed redundant game frame check
  if(load(0x134C5B) == 1 && loadMenuState() == 0) { // 
    if(partnerLevel == 1 && evoTimer >= 6)
      store(0x134E50, getFreshEvolutionTarget(digimonType))
    else if(partnerLevel == 2 && evoTimer >= 24)
      store(0x134E50, getInTrainingEvolutionTarget(digimonType))
    else if(partnerLevel == 3 && evoTimer >= 72)
      store(0x134E50, getRookieEvolutionTarget(digimonType))
    else if(partnerLevel == 4 && evoTimer >= 144)
      store(0x134E50, getChampionEvolutionTarget(digimonType))
    
    if(partnerLevel == 4 && evoTimer == 360)
      store(0x134E50, handleSpecialEvolutions(3, load(0x12F348)))
  }
  
  if(load(0x13847E) >= 16 && digimonType != 0x27) { // Virus Bar
    store(0x134E50, 39) // Sukamon
    
    writePStat(5, digimonType)
    store(0x1384D6, load(0x1557F0))
    store(0x1384D8, load(0x1557F2))
    store(0x1384DA, load(0x1557E0))
    store(0x1384DC, load(0x1557E2))
    store(0x1384DE, load(0x1557E4))
    store(0x1384E0, load(0x1557E6))
    store(0x13847E, 0)
  }
  
  if(load(0x134E50) != -1 && load(0x134C5B) != 13) {
    setMenuState(6)
    setDigimonState(13)
  }
}

0x000a8f38 addiu sp,sp,0xffe0
0x000a8f3c sw ra,0x0018(sp)
0x000a8f40 sw s1,0x0014(sp)
0x000a8f44 lb v0,-0x6c22(gp)
0x000a8f48 nop
0x000a8f4c bne v0,r0,0x000a9358
0x000a8f50 sw s0,0x0010(sp)
0x000a8f54 lb v0,-0x6ed1(gp)
0x000a8f58 addiu asmTemp,r0,0x0001
0x000a8f5c bne v0,asmTemp,0x000a9358
0x000a8f60 nop
0x000a8f64 lb v0,-0x6d0c(gp)
0x000a8f68 nop
0x000a8f6c beq v0,r0,0x000a9358
0x000a8f70 nop
0x000a8f74 lhu v1,-0x6c24(gp)
0x000a8f78 lhu v0,-0x6c26(gp)
0x000a8f7c nop
0x000a8f80 beq v1,v0,0x000a9358
0x000a8f84 nop
0x000a8f88 lw v0,-0x6e74(gp)
0x000a8f8c addiu asmTemp,r0,0x0001
0x000a8f90 beq v0,asmTemp,0x000a9358
0x000a8f94 nop
0x000a8f98 jal 0x000a8a3c
0x000a8f9c nop
0x000a8fa0 jal 0x000a5804
0x000a8fa4 nop
0x000a8fa8 jal 0x000a856c
0x000a8fac nop
0x000a8fb0 jal 0x000a70e4
0x000a8fb4 nop
0x000a8fb8 jal 0x000a75dc
0x000a8fbc nop
0x000a8fc0 jal 0x000a5ea0
0x000a8fc4 nop
0x000a8fc8 jal 0x000a568c
0x000a8fcc nop
0x000a8fd0 lui asmTemp,0x8014
0x000a8fd4 lh v0,-0x7b6c(asmTemp)
0x000a8fd8 nop
0x000a8fdc addi v0,v0,0x0001
0x000a8fe0 lui asmTemp,0x8014
0x000a8fe4 sh v0,-0x7b6c(asmTemp)
0x000a8fe8 lui asmTemp,0x8014
0x000a8fec lh v0,-0x7b6c(asmTemp)
0x000a8ff0 nop
0x000a8ff4 slti asmTemp,v0,0x7081
0x000a8ff8 bne asmTemp,r0,0x000a9008
0x000a8ffc nop
0x000a9000 lui asmTemp,0x8014
0x000a9004 sh r0,-0x7b6c(asmTemp)
0x000a9008 lui asmTemp,0x8014
0x000a900c lh v0,-0x7b50(asmTemp)
0x000a9010 nop
0x000a9014 addi v0,v0,-0x0001
0x000a9018 lui asmTemp,0x8014
0x000a901c sh v0,-0x7b50(asmTemp)
0x000a9020 lui asmTemp,0x8014
0x000a9024 lh v0,-0x7b50(asmTemp)
0x000a9028 nop
0x000a902c bgtz v0,0x000a9044
0x000a9030 nop
0x000a9034 lui asmTemp,0x8014
0x000a9038 sh r0,-0x7b54(asmTemp)
0x000a903c lui asmTemp,0x8014
0x000a9040 sh r0,-0x7b50(asmTemp)
0x000a9044 lhu v1,-0x6c24(gp)
0x000a9048 addiu v0,r0,0x12c0
0x000a904c div v1,v0
0x000a9050 mfhi v0
0x000a9054 bne v0,r0,0x000a90c8
0x000a9058 nop
0x000a905c lui asmTemp,0x8014
0x000a9060 lh v0,-0x7b76(asmTemp)
0x000a9064 nop
0x000a9068 slti asmTemp,v0,0x0050
0x000a906c beq asmTemp,r0,0x000a90c8
0x000a9070 addu v1,v0,r0
0x000a9074 lui v0,0xae14
0x000a9078 addi v1,v1,-0x0050
0x000a907c ori v0,v0,0x7ae1
0x000a9080 mult v0,v1
0x000a9084 lui asmTemp,0x8014
0x000a9088 mfhi v0
0x000a908c sra v1,v0,0x04
0x000a9090 srl v0,v1,0x1f
0x000a9094 addu v1,v1,v0
0x000a9098 lh v0,-0x7b58(asmTemp)
0x000a909c addi v1,v1,0x0001
0x000a90a0 sub v0,v0,v1
0x000a90a4 lui asmTemp,0x8014
0x000a90a8 sh v0,-0x7b58(asmTemp)
0x000a90ac lui asmTemp,0x8014
0x000a90b0 lh v0,-0x7b58(asmTemp)
0x000a90b4 nop
0x000a90b8 bgez v0,0x000a90c8
0x000a90bc nop
0x000a90c0 lui asmTemp,0x8014
0x000a90c4 sh r0,-0x7b58(asmTemp)
0x000a90c8 jal 0x000d7618
0x000a90cc nop
0x000a90d0 beq v0,r0,0x000a9358
0x000a90d4 nop
0x000a90d8 lw v0,-0x6e84(gp)
0x000a90dc addiu asmTemp,r0,0x0001
0x000a90e0 bne v0,asmTemp,0x000a90fc
0x000a90e4 addu a0,v0,r0
0x000a90e8 lb v1,-0x6e88(gp)
0x000a90ec lh v0,-0x6c70(gp)
0x000a90f0 nop
0x000a90f4 beq v1,v0,0x000a9358
0x000a90f8 nop
0x000a90fc addiu asmTemp,r0,0x0001
0x000a9100 bne a0,asmTemp,0x000a9128
0x000a9104 nop
0x000a9108 lb v1,-0x6e88(gp)
0x000a910c lh v0,-0x6c70(gp)
0x000a9110 nop
0x000a9114 beq v1,v0,0x000a9128
0x000a9118 nop
0x000a911c addiu v0,r0,0xffff
0x000a9120 sw r0,-0x6e84(gp)
0x000a9124 sb v0,-0x6e88(gp)
0x000a9128 lui asmTemp,0x8014
0x000a912c lh s1,-0x7b4a(asmTemp)
0x000a9130 lui asmTemp,0x8015
0x000a9134 lw v1,0x57a8(asmTemp)
0x000a9138 nop
0x000a913c sll v0,v1,0x01
0x000a9140 add v0,v0,v1
0x000a9144 sll v0,v0,0x02
0x000a9148 add v0,v0,v1
0x000a914c sll v1,v0,0x02
0x000a9150 lui v0,0x8013
0x000a9154 addiu v0,v0,0xced1
0x000a9158 addu v0,v0,v1
0x000a915c lbu s0,0x0000(v0)
0x000a9160 jal 0x000ac050
0x000a9164 nop
0x000a9168 sll a0,v0,0x10
0x000a916c lhu v1,-0x6c24(gp)
0x000a9170 lhu v0,-0x6c26(gp)
0x000a9174 nop
0x000a9178 beq v1,v0,0x000a9280
0x000a917c sra a0,a0,0x10
0x000a9180 lb v0,-0x6ed1(gp)
0x000a9184 addiu asmTemp,r0,0x0001
0x000a9188 bne v0,asmTemp,0x000a9280
0x000a918c nop
0x000a9190 bne a0,r0,0x000a9280
0x000a9194 nop
0x000a9198 addiu asmTemp,r0,0x0001
0x000a919c bne s0,asmTemp,0x000a91c8
0x000a91a0 nop
0x000a91a4 slti asmTemp,s1,0x0006
0x000a91a8 bne asmTemp,r0,0x000a91c8
0x000a91ac nop
0x000a91b0 lui asmTemp,0x8015
0x000a91b4 lw a0,0x57a8(asmTemp)
0x000a91b8 jal 0x000e2544
0x000a91bc nop
0x000a91c0 beq r0,r0,0x000a9254
0x000a91c4 sh v0,-0x6cdc(gp)
0x000a91c8 addiu asmTemp,r0,0x0002
0x000a91cc bne s0,asmTemp,0x000a91f8
0x000a91d0 nop
0x000a91d4 slti asmTemp,s1,0x0018
0x000a91d8 bne asmTemp,r0,0x000a91f8
0x000a91dc nop
0x000a91e0 lui asmTemp,0x8015
0x000a91e4 lw a0,0x57a8(asmTemp)
0x000a91e8 jal 0x000e2598
0x000a91ec nop
0x000a91f0 beq r0,r0,0x000a9254
0x000a91f4 sh v0,-0x6cdc(gp)
0x000a91f8 addiu asmTemp,r0,0x0003
0x000a91fc bne s0,asmTemp,0x000a9228
0x000a9200 nop
0x000a9204 slti asmTemp,s1,0x0048
0x000a9208 bne asmTemp,r0,0x000a9228
0x000a920c nop
0x000a9210 lui asmTemp,0x8015
0x000a9214 lw a0,0x57a8(asmTemp)
0x000a9218 jal 0x000e2bb4
0x000a921c nop
0x000a9220 beq r0,r0,0x000a9254
0x000a9224 sh v0,-0x6cdc(gp)
0x000a9228 addiu asmTemp,r0,0x0004
0x000a922c bne s0,asmTemp,0x000a9254
0x000a9230 nop
0x000a9234 slti asmTemp,s1,0x0090
0x000a9238 bne asmTemp,r0,0x000a9254
0x000a923c nop
0x000a9240 lui asmTemp,0x8015
0x000a9244 lw a0,0x57a8(asmTemp)
0x000a9248 jal 0x000e2f08
0x000a924c nop
0x000a9250 sh v0,-0x6cdc(gp)
0x000a9254 addiu asmTemp,r0,0x0004
0x000a9258 bne s0,asmTemp,0x000a9280
0x000a925c nop
0x000a9260 addiu asmTemp,r0,0x0168
0x000a9264 bne s1,asmTemp,0x000a9280
0x000a9268 nop
0x000a926c lui asmTemp,0x8013
0x000a9270 lw a1,-0x0cb8(asmTemp)
0x000a9274 jal 0x000e3234
0x000a9278 addiu a0,r0,0x0003
0x000a927c sh v0,-0x6cdc(gp)
0x000a9280 lui asmTemp,0x8014
0x000a9284 lh v0,-0x7b82(asmTemp)
0x000a9288 nop
0x000a928c slti asmTemp,v0,0x0010
0x000a9290 bne asmTemp,r0,0x000a9328
0x000a9294 nop
0x000a9298 lui asmTemp,0x8015
0x000a929c lw v1,0x57a8(asmTemp)
0x000a92a0 addiu asmTemp,r0,0x0027
0x000a92a4 beq v1,asmTemp,0x000a9328
0x000a92a8 nop
0x000a92ac addiu v0,r0,0x0027
0x000a92b0 sh v0,-0x6cdc(gp)
0x000a92b4 andi a1,v1,0x00ff
0x000a92b8 jal 0x00106474
0x000a92bc addiu a0,r0,0x0005
0x000a92c0 lui asmTemp,0x8015
0x000a92c4 lh v0,0x57f0(asmTemp)
0x000a92c8 lui asmTemp,0x8014
0x000a92cc sh v0,-0x7b2a(asmTemp)
0x000a92d0 lui asmTemp,0x8015
0x000a92d4 lh v0,0x57f2(asmTemp)
0x000a92d8 lui asmTemp,0x8014
0x000a92dc sh v0,-0x7b28(asmTemp)
0x000a92e0 lui asmTemp,0x8015
0x000a92e4 lh v0,0x57e0(asmTemp)
0x000a92e8 lui asmTemp,0x8014
0x000a92ec sh v0,-0x7b26(asmTemp)
0x000a92f0 lui asmTemp,0x8015
0x000a92f4 lh v0,0x57e2(asmTemp)
0x000a92f8 lui asmTemp,0x8014
0x000a92fc sh v0,-0x7b24(asmTemp)
0x000a9300 lui asmTemp,0x8015
0x000a9304 lh v0,0x57e4(asmTemp)
0x000a9308 lui asmTemp,0x8014
0x000a930c sh v0,-0x7b22(asmTemp)
0x000a9310 lui asmTemp,0x8015
0x000a9314 lh v0,0x57e6(asmTemp)
0x000a9318 lui asmTemp,0x8014
0x000a931c sh v0,-0x7b20(asmTemp)
0x000a9320 lui asmTemp,0x8014
0x000a9324 sh r0,-0x7b82(asmTemp)
0x000a9328 lh v0,-0x6cdc(gp)
0x000a932c addiu asmTemp,r0,0xffff
0x000a9330 beq v0,asmTemp,0x000a9358
0x000a9334 nop
0x000a9338 lb v0,-0x6ed1(gp)
0x000a933c addiu asmTemp,r0,0x000d
0x000a9340 beq v0,asmTemp,0x000a9358
0x000a9344 nop
0x000a9348 jal 0x000aa188
0x000a934c addiu a0,r0,0x0006
0x000a9350 jal 0x000df4d0
0x000a9354 addiu a0,r0,0x000d
0x000a9358 lw ra,0x0018(sp)
0x000a935c lw s1,0x0014(sp)
0x000a9360 lw s0,0x0010(sp)
0x000a9364 jr ra
0x000a9368 addiu sp,sp,0x0020