// Bug: can softlock if axis speed is 0
int waitForEntityMoveToAxis(scriptId, targetValue, axis, duration, withCamera) {
  entityPtr, entityId = loadEntityDataFromScriptId(scriptId)
  locationPtr = load(entityPtr + 0x04)
  
  if(axis == 0)
    axisCoordPtr = locationPtr + 0x78
  else if(axis == 1)
    axisCoordPtr = locationPtr + 0x7C
  else
    axisCoordPtr = locationPtr + 0x80
  
  if(load(0x134C80) == 0) {
    store(0x134C98, (targetValue - load(axisCoordPtr)) / duration)
    
    store(0x1387A8, load(locationPtr + 0x78))
    store(0x1387AC, load(locationPtr + 0x7C))
    store(0x1387B0, load(locationPtr + 0x80))
    store(0x1387B4, load(locationPtr + 0x84))
    
    store(0x134C80, 1)
  }
  else {
    store(axisCoordPtr, load(axisCoordPtr) + load(0x134C98))
    
    a1 = load(locationPtr + 0x78)
    a2 = load(locationPtr + 0x7C)
    a3 = load(locationPtr + 0x80)
    
    setEntityPosition(entityId, a1, a2, a3)
    setupEntityMatrix(a0)
    
    if(load(0x134C98) < 0) {
      if(targetValue < load(axisCoordPtr)) {
        store(axisCoordPtr, targetValue)
        store(0x134C80, 0)
        return 1
      }
    }
    else {
      if(load(axisCoordPtr) < targetValue) {
        store(axisCoordPtr, targetValue)
        store(0x134C80, 0)
        return 1
      }
    }
  }
  
  if(withCamera == 1) {
    0x000D892C(0x1387A8, locationPtr + 0x78)
    
    store(0x1387A8, load(locationPtr + 0x78))
    store(0x1387AC, load(locationPtr + 0x7C))
    store(0x1387B0, load(locationPtr + 0x80))
    store(0x1387B4, load(locationPtr + 0x84))
  }
  
  return 0
}

0x000ac860 addiu sp,sp,0xffd8
0x000ac864 sw ra,0x0024(sp)
0x000ac868 sw s4,0x0020(sp)
0x000ac86c sw s3,0x001c(sp)
0x000ac870 sw s2,0x0018(sp)
0x000ac874 sw s1,0x0014(sp)
0x000ac878 sw s0,0x0010(sp)
0x000ac87c sw a0,0x0028(sp)
0x000ac880 lb s4,0x0038(sp)
0x000ac884 addu s2,a1,r0
0x000ac888 addu s0,a2,r0
0x000ac88c addu s3,a3,r0
0x000ac890 jal 0x000ac2f8
0x000ac894 addiu a0,sp,0x0028
0x000ac898 bne s0,r0,0x000ac8ac
0x000ac89c addu s1,v0,r0
0x000ac8a0 lw v0,0x0004(s1)
0x000ac8a4 beq r0,r0,0x000ac8d0
0x000ac8a8 addiu s0,v0,0x0078
0x000ac8ac addiu asmTemp,r0,0x0001
0x000ac8b0 bne s0,asmTemp,0x000ac8c4
0x000ac8b4 nop
0x000ac8b8 lw v0,0x0004(s1)
0x000ac8bc beq r0,r0,0x000ac8d0
0x000ac8c0 addiu s0,v0,0x007c
0x000ac8c4 lw v0,0x0004(s1)
0x000ac8c8 nop
0x000ac8cc addiu s0,v0,0x0080
0x000ac8d0 lb v0,-0x6eac(gp)
0x000ac8d4 nop
0x000ac8d8 bne v0,r0,0x000ac938
0x000ac8dc nop
0x000ac8e0 lw v0,0x0000(s0)
0x000ac8e4 lui asmTemp,0x8014
0x000ac8e8 sub v0,s2,v0
0x000ac8ec div v0,s3
0x000ac8f0 mflo v0
0x000ac8f4 sh v0,-0x6e94(gp)
0x000ac8f8 lw v0,0x0004(s1)
0x000ac8fc nop
0x000ac900 lw a1,0x0078(v0)
0x000ac904 lw a0,0x007c(v0)
0x000ac908 lw v1,0x0080(v0)
0x000ac90c lw v0,0x0084(v0)
0x000ac910 sw a1,-0x7858(asmTemp)
0x000ac914 lui asmTemp,0x8014
0x000ac918 sw a0,-0x7854(asmTemp)
0x000ac91c lui asmTemp,0x8014
0x000ac920 sw v1,-0x7850(asmTemp)
0x000ac924 lui asmTemp,0x8014
0x000ac928 sw v0,-0x784c(asmTemp)
0x000ac92c addiu v0,r0,0x0001
0x000ac930 beq r0,r0,0x000ac9cc
0x000ac934 sb v0,-0x6eac(gp)
0x000ac938 lh v1,-0x6e94(gp)
0x000ac93c lw v0,0x0000(s0)
0x000ac940 nop
0x000ac944 add v0,v0,v1
0x000ac948 sw v0,0x0000(s0)
0x000ac94c lw v0,0x0004(s1)
0x000ac950 lbu a0,0x0028(sp)
0x000ac954 lw a1,0x0078(v0)
0x000ac958 lw a2,0x007c(v0)
0x000ac95c lw a3,0x0080(v0)
0x000ac960 jal 0x000a1540
0x000ac964 nop
0x000ac968 lbu a0,0x0028(sp)
0x000ac96c jal 0x000a14c0
0x000ac970 nop
0x000ac974 lh v0,-0x6e94(gp)
0x000ac978 nop
0x000ac97c bgez v0,0x000ac9a8
0x000ac980 nop
0x000ac984 lw v0,0x0000(s0)
0x000ac988 nop
0x000ac98c slt asmTemp,s2,v0
0x000ac990 bne asmTemp,r0,0x000ac9cc
0x000ac994 nop
0x000ac998 sw s2,0x0000(s0)
0x000ac99c sb r0,-0x6eac(gp)
0x000ac9a0 beq r0,r0,0x000aca24
0x000ac9a4 addiu v0,r0,0x0001
0x000ac9a8 lw v0,0x0000(s0)
0x000ac9ac nop
0x000ac9b0 slt asmTemp,v0,s2
0x000ac9b4 bne asmTemp,r0,0x000ac9cc
0x000ac9b8 nop
0x000ac9bc sw s2,0x0000(s0)
0x000ac9c0 sb r0,-0x6eac(gp)
0x000ac9c4 beq r0,r0,0x000aca24
0x000ac9c8 addiu v0,r0,0x0001
0x000ac9cc addiu asmTemp,r0,0x0001
0x000ac9d0 bne s4,asmTemp,0x000aca20
0x000ac9d4 nop
0x000ac9d8 lw v0,0x0004(s1)
0x000ac9dc lui a0,0x8014
0x000ac9e0 addiu a0,a0,0x87a8
0x000ac9e4 jal 0x000d892c
0x000ac9e8 addiu a1,v0,0x0078
0x000ac9ec lw v0,0x0004(s1)
0x000ac9f0 lui asmTemp,0x8014
0x000ac9f4 lw a1,0x0078(v0)
0x000ac9f8 lw a0,0x007c(v0)
0x000ac9fc lw v1,0x0080(v0)
0x000aca00 lw v0,0x0084(v0)
0x000aca04 sw a1,-0x7858(asmTemp)
0x000aca08 lui asmTemp,0x8014
0x000aca0c sw a0,-0x7854(asmTemp)
0x000aca10 lui asmTemp,0x8014
0x000aca14 sw v1,-0x7850(asmTemp)
0x000aca18 lui asmTemp,0x8014
0x000aca1c sw v0,-0x784c(asmTemp)
0x000aca20 addu v0,r0,r0
0x000aca24 lw ra,0x0024(sp)
0x000aca28 lw s4,0x0020(sp)
0x000aca2c lw s3,0x001c(sp)
0x000aca30 lw s2,0x0018(sp)
0x000aca34 lw s1,0x0014(sp)
0x000aca38 lw s0,0x0010(sp)
0x000aca3c jr ra
0x000aca40 addiu sp,sp,0x0028