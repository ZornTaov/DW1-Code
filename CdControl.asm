int CdControl(command, param, result) {
  backupValue = load(0x12371C)
  
  for(int i = 0; i < 3; i++) {
    store(0x12371C, 0)
    
    if(command != 1 && load(0x123728) & 0x10 != 0)
      0x000B1150(1, 0, 0, 0)
    
    if(params != 0 && load(0x12344C + command * 4) != 0)
      if(0x000B1150(2, 0, 0, 0) != 0)
        continue
    
    store(0x12371C, backupValue)
    
    if(0x000B1150(command, param, result, 0) == 0)
      return 1
  } 
  
  store(0x12371C, backupValue)
  return 0
}

0x000b0010 addiu sp,sp,0xffc8
0x000b0014 sw s1,0x0014(sp)
0x000b0018 addu s1,a1,r0
0x000b001c sw s2,0x0018(sp)
0x000b0020 addu s2,a2,r0
0x000b0024 sw s4,0x0020(sp)
0x000b0028 addu s4,a0,r0
0x000b002c sw s0,0x0010(sp)
0x000b0030 addiu s0,r0,0x0003
0x000b0034 sw s3,0x001c(sp)
0x000b0038 andi s3,s4,0x00ff
0x000b003c lui v1,0x8012
0x000b0040 addiu v1,v1,0x344c
0x000b0044 sw s5,0x0024(sp)
0x000b0048 lui s5,0x8012
0x000b004c lw s5,0x371c(s5)
0x000b0050 sll v0,s3,0x02
0x000b0054 sw s6,0x0028(sp)
0x000b0058 addu s6,v0,v1
0x000b005c sw s7,0x002c(sp)
0x000b0060 addu s7,r0,r0
0x000b0064 sw fp,0x0030(sp)
0x000b0068 addiu fp,r0,0xffff
0x000b006c sw ra,0x0034(sp)
0x000b0070 lui asmTemp,0x8012
0x000b0074 sw r0,0x371c(asmTemp)
0x000b0078 addiu t0,r0,0x0001
0x000b007c beq s3,t0,0x000b00ac
0x000b0080 nop
0x000b0084 lui v0,0x8012
0x000b0088 lbu v0,0x3728(v0)
0x000b008c nop
0x000b0090 andi v0,v0,0x0010
0x000b0094 beq v0,r0,0x000b00ac
0x000b0098 addiu a0,r0,0x0001
0x000b009c addu a1,r0,r0
0x000b00a0 addu a2,r0,r0
0x000b00a4 jal 0x000b1150
0x000b00a8 addu a3,r0,r0
0x000b00ac beq s1,r0,0x000b00dc
0x000b00b0 nop
0x000b00b4 lw v0,0x0000(s6)
0x000b00b8 nop
0x000b00bc beq v0,r0,0x000b00dc
0x000b00c0 addiu a0,r0,0x0002
0x000b00c4 addu a1,s1,r0
0x000b00c8 addu a2,s2,r0
0x000b00cc jal 0x000b1150
0x000b00d0 addu a3,r0,r0
0x000b00d4 bne v0,r0,0x000b0100
0x000b00d8 nop
0x000b00dc lui asmTemp,0x8012
0x000b00e0 sw s5,0x371c(asmTemp)
0x000b00e4 andi a0,s4,0x00ff
0x000b00e8 addu a1,s1,r0
0x000b00ec addu a2,s2,r0
0x000b00f0 jal 0x000b1150
0x000b00f4 addu a3,r0,r0
0x000b00f8 beq v0,r0,0x000b011c
0x000b00fc addiu v0,s7,0x0001
0x000b0100 addiu s0,s0,0xffff
0x000b0104 bne s0,fp,0x000b0070
0x000b0108 nop
0x000b010c lui asmTemp,0x8012
0x000b0110 sw s5,0x371c(asmTemp)
0x000b0114 addiu s7,r0,0xffff
0x000b0118 addiu v0,s7,0x0001
0x000b011c lw ra,0x0034(sp)
0x000b0120 lw fp,0x0030(sp)
0x000b0124 lw s7,0x002c(sp)
0x000b0128 lw s6,0x0028(sp)
0x000b012c lw s5,0x0024(sp)
0x000b0130 lw s4,0x0020(sp)
0x000b0134 lw s3,0x001c(sp)
0x000b0138 lw s2,0x0018(sp)
0x000b013c lw s1,0x0014(sp)
0x000b0140 lw s0,0x0010(sp)
0x000b0144 jr ra
0x000b0148 addiu sp,sp,0x0038
