void tickTirednessMechanics() {
  areaEffectTimer = load(0x138494) // area effect timer
  
  if(areaEffectTimer % 1200 == 0 && areaEffectTimer > 0) {
    likeType = load(0x150C3E)
    
    if(likeType == 1) { // likes area
      store(0x13848A, load(0x13848A) + 1) // happiness
      store(0x138482, load(0x138482) - 2) // tiredness
    }
    if(likeType == 2) { // dislikes area
      store(0x13848A, load(0x13848A) - 1) // happiness
      store(0x138482, load(0x138482) + 1) // tiredness
    }
  }
  
  if(load(0x138484) >= 60) {
    newTiredness = load(0x138482) + 1
    if(newTiredness > 100)
      newTiredness = 100
    
    store(0x138482, newTiredness)
    store(0x138484, 0)
  }
  
  tiredness = load(0x138482)
  
  if(tiredness >= 50)
    store(0x138486, load(0x138486) + 1) // tiredness hunger timer
  else
    store(0x138486, 0)
  
  if(tiredness >= 80) {
    currentFrame = load(0x134F08)
    previousFrame = load(0x134F06)
    store(0x138460, load(0x138460) | 0x02) // set tired condition
    
    if(currentFrame % 100 == 0 && currentFrame != previousFrame)
      store(0x13848A, load(0x13848A) - 2) // happiness
  }
  else
    store(0x138460, load(0x138460) & 0xFFFD) // unset tired condition
}

0x000a70e4 lui asmTemp,0x8014
0x000a70e8 lh v1,-0x7b6c(asmTemp)
0x000a70ec addiu v0,r0,0x04b0
0x000a70f0 div v1,v0
0x000a70f4 mfhi v0
0x000a70f8 bne v0,r0,0x000a7188
0x000a70fc addu a0,v1,r0
0x000a7100 blez a0,0x000a7188
0x000a7104 nop
0x000a7108 lui asmTemp,0x8015
0x000a710c lb v0,0x0c3e(asmTemp)
0x000a7110 addiu asmTemp,r0,0x0001
0x000a7114 bne v0,asmTemp,0x000a714c
0x000a7118 addu v1,v0,r0
0x000a711c lui asmTemp,0x8014
0x000a7120 lh v0,-0x7b76(asmTemp)
0x000a7124 nop
0x000a7128 addi v0,v0,0x0001
0x000a712c lui asmTemp,0x8014
0x000a7130 sh v0,-0x7b76(asmTemp)
0x000a7134 lui asmTemp,0x8014
0x000a7138 lh v0,-0x7b7e(asmTemp)
0x000a713c nop
0x000a7140 addi v0,v0,-0x0002
0x000a7144 lui asmTemp,0x8014
0x000a7148 sh v0,-0x7b7e(asmTemp)
0x000a714c addiu asmTemp,r0,0x0002
0x000a7150 bne v1,asmTemp,0x000a7188
0x000a7154 nop
0x000a7158 lui asmTemp,0x8014
0x000a715c lh v0,-0x7b76(asmTemp)
0x000a7160 nop
0x000a7164 addi v0,v0,-0x0001
0x000a7168 lui asmTemp,0x8014
0x000a716c sh v0,-0x7b76(asmTemp)
0x000a7170 lui asmTemp,0x8014
0x000a7174 lh v0,-0x7b7e(asmTemp)
0x000a7178 nop
0x000a717c addi v0,v0,0x0001
0x000a7180 lui asmTemp,0x8014
0x000a7184 sh v0,-0x7b7e(asmTemp)
0x000a7188 lui asmTemp,0x8014
0x000a718c lh v0,-0x7b7c(asmTemp)
0x000a7190 nop
0x000a7194 slti asmTemp,v0,0x003c
0x000a7198 bne asmTemp,r0,0x000a71e4
0x000a719c nop
0x000a71a0 lui asmTemp,0x8014
0x000a71a4 lh v0,-0x7b7e(asmTemp)
0x000a71a8 nop
0x000a71ac addi v0,v0,0x0001
0x000a71b0 lui asmTemp,0x8014
0x000a71b4 sh v0,-0x7b7e(asmTemp)
0x000a71b8 lui asmTemp,0x8014
0x000a71bc lh v0,-0x7b7e(asmTemp)
0x000a71c0 nop
0x000a71c4 slti asmTemp,v0,0x0064
0x000a71c8 bne asmTemp,r0,0x000a71dc
0x000a71cc nop
0x000a71d0 addiu v0,r0,0x0064
0x000a71d4 lui asmTemp,0x8014
0x000a71d8 sh v0,-0x7b7e(asmTemp)
0x000a71dc lui asmTemp,0x8014
0x000a71e0 sh r0,-0x7b7c(asmTemp)
0x000a71e4 lui asmTemp,0x8014
0x000a71e8 lh v0,-0x7b7e(asmTemp)
0x000a71ec nop
0x000a71f0 slti asmTemp,v0,0x0032
0x000a71f4 bne asmTemp,r0,0x000a7218
0x000a71f8 nop
0x000a71fc lui asmTemp,0x8014
0x000a7200 lh v0,-0x7b7a(asmTemp)
0x000a7204 nop
0x000a7208 addi v0,v0,0x0001
0x000a720c lui asmTemp,0x8014
0x000a7210 beq r0,r0,0x000a7220
0x000a7214 sh v0,-0x7b7a(asmTemp)
0x000a7218 lui asmTemp,0x8014
0x000a721c sh r0,-0x7b7a(asmTemp)
0x000a7220 lui asmTemp,0x8014
0x000a7224 lh v0,-0x7b7e(asmTemp)
0x000a7228 nop
0x000a722c slti asmTemp,v0,0x0050
0x000a7230 bne asmTemp,r0,0x000a7290
0x000a7234 nop
0x000a7238 lui asmTemp,0x8014
0x000a723c lw v0,-0x7ba0(asmTemp)
0x000a7240 lhu v1,-0x6c24(gp)
0x000a7244 ori v0,v0,0x0002
0x000a7248 lui asmTemp,0x8014
0x000a724c sw v0,-0x7ba0(asmTemp)
0x000a7250 addiu v0,r0,0x0064
0x000a7254 div v1,v0
0x000a7258 mfhi v0
0x000a725c bne v0,r0,0x000a72a8
0x000a7260 addu a0,v1,r0
0x000a7264 lhu v0,-0x6c26(gp)
0x000a7268 nop
0x000a726c beq a0,v0,0x000a72a8
0x000a7270 nop
0x000a7274 lui asmTemp,0x8014
0x000a7278 lh v0,-0x7b76(asmTemp)
0x000a727c nop
0x000a7280 addi v0,v0,-0x0002
0x000a7284 lui asmTemp,0x8014
0x000a7288 beq r0,r0,0x000a72a8
0x000a728c sh v0,-0x7b76(asmTemp)
0x000a7290 lui asmTemp,0x8014
0x000a7294 lw v1,-0x7ba0(asmTemp)
0x000a7298 addiu v0,r0,0xfffd
0x000a729c and v0,v1,v0
0x000a72a0 lui asmTemp,0x8014
0x000a72a4 sw v0,-0x7ba0(asmTemp)
0x000a72a8 jr ra
0x000a72ac nop