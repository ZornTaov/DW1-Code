void handleConditionBubbles() {
  digimonState = load(0x134C5B)
  bubbleType = -1
  
  // normal or training
  if(digimonState != 1 && digimonState != 10)
    return
  
  conditionFlag = load(0x138460)
  activeBubble = load(0x134C6C)
  
  if(conditionFlag & 0x40 != 0 && activeBubble != 2)
    bubbleType = 2
  if(conditionFlag & 0x20 != 0 && activeBubble != 6)
    bubbleType = 6
  if(conditionFlag & 0x08 != 0 && activeBubble != 1)
    bubbleType = 1
  if(conditionFlag & 0x04 != 0 && activeBubble != 0)
    bubbleType = 0
  if(conditionFlag & 0x02 != 0 && activeBubble != 4)
    bubbleType = 4
  if(conditionFlag & 0x01 != 0 && activeBubble != 3)
    bubbleType = 3
  
  if(conditionFlag & 0x10 != 0 && bubbleType == -1 && load(0x134C54) != 0 && conditionFlag == 0x10) {
    unsetBubble(load(0x134C70))
    
    store(0x134C60, setButterfly(load(0x12F348)))
    store(0x134C54, 0)
    return
  }
  
  activeBubble = load(0x134C6C)
  
  // new bubble, old bubble ran out
  if(bubbleType != activeBubble && bubbleType != -1 && load(0x134C74) >= 50 && load(0x134C54) == 0) {
    unsetButterfly(load(0x134C60))
    
    store(0x134C54, 0)
    store(0x138460, load(0x138460) & 0xFFEF) // remove butterfly
    store(0x1557D7, 1)
    
    unsetBubble(load(0x134C70))
    
    store(0x134C6C, bubbleType)
    store(0x134C70, setBubble(bubbleType, load(0x12F348)))
    store(0x134C74, 0)
  }
  
  newFrameCount = load(0x134C74) + 1
  store(0x134C74, newFrameCount >= 60 ? -1 : newFrameCount)
}

0x000a7960 addiu sp,sp,0xffe8
0x000a7964 sw ra,0x0014(sp)
0x000a7968 lb v0,-0x6ed1(gp)
0x000a796c sw s0,0x0010(sp)
0x000a7970 addiu s0,r0,0xffff
0x000a7974 addiu asmTemp,r0,0x0001
0x000a7978 beq v0,asmTemp,0x000a798c
0x000a797c addu v1,v0,r0
0x000a7980 addiu asmTemp,r0,0x000a
0x000a7984 bne v1,asmTemp,0x000a7b84
0x000a7988 nop
0x000a798c lui asmTemp,0x8014
0x000a7990 lw v1,-0x7ba0(asmTemp)
0x000a7994 nop
0x000a7998 addu v0,v1,r0
0x000a799c andi v0,v0,0x0040
0x000a79a0 beq v0,r0,0x000a79bc
0x000a79a4 nop
0x000a79a8 lw v0,-0x6ec0(gp)
0x000a79ac addiu asmTemp,r0,0x0002
0x000a79b0 beq v0,asmTemp,0x000a79bc
0x000a79b4 nop
0x000a79b8 addiu s0,r0,0x0002
0x000a79bc andi v0,v1,0x0020
0x000a79c0 beq v0,r0,0x000a79dc
0x000a79c4 nop
0x000a79c8 lw v0,-0x6ec0(gp)
0x000a79cc addiu asmTemp,r0,0x0006
0x000a79d0 beq v0,asmTemp,0x000a79dc
0x000a79d4 nop
0x000a79d8 addiu s0,r0,0x0006
0x000a79dc andi v0,v1,0x0008
0x000a79e0 beq v0,r0,0x000a79fc
0x000a79e4 nop
0x000a79e8 lw v0,-0x6ec0(gp)
0x000a79ec addiu asmTemp,r0,0x0001
0x000a79f0 beq v0,asmTemp,0x000a79fc
0x000a79f4 nop
0x000a79f8 addiu s0,r0,0x0001
0x000a79fc andi v0,v1,0x0004
0x000a7a00 beq v0,r0,0x000a7a1c
0x000a7a04 nop
0x000a7a08 lw v0,-0x6ec0(gp)
0x000a7a0c nop
0x000a7a10 beq v0,r0,0x000a7a1c
0x000a7a14 nop
0x000a7a18 addu s0,r0,r0
0x000a7a1c andi v0,v1,0x0002
0x000a7a20 beq v0,r0,0x000a7a3c
0x000a7a24 nop
0x000a7a28 lw v0,-0x6ec0(gp)
0x000a7a2c addiu asmTemp,r0,0x0004
0x000a7a30 beq v0,asmTemp,0x000a7a3c
0x000a7a34 nop
0x000a7a38 addiu s0,r0,0x0004
0x000a7a3c andi v0,v1,0x0001
0x000a7a40 beq v0,r0,0x000a7a5c
0x000a7a44 nop
0x000a7a48 lw v0,-0x6ec0(gp)
0x000a7a4c addiu asmTemp,r0,0x0003
0x000a7a50 beq v0,asmTemp,0x000a7a5c
0x000a7a54 nop
0x000a7a58 addiu s0,r0,0x0003
0x000a7a5c andi v0,v1,0x0010
0x000a7a60 beq v0,r0,0x000a7ab8
0x000a7a64 nop
0x000a7a68 addiu asmTemp,r0,0xffff
0x000a7a6c bne s0,asmTemp,0x000a7ab8
0x000a7a70 nop
0x000a7a74 lw v0,-0x6ed8(gp)
0x000a7a78 nop
0x000a7a7c beq v0,r0,0x000a7ab8
0x000a7a80 nop
0x000a7a84 addiu asmTemp,r0,0x0010
0x000a7a88 bne v1,asmTemp,0x000a7ab8
0x000a7a8c nop
0x000a7a90 lw a0,-0x6ebc(gp)
0x000a7a94 jal 0x000ece20
0x000a7a98 nop
0x000a7a9c lui asmTemp,0x8013
0x000a7aa0 lw a0,-0x0cb8(asmTemp)
0x000a7aa4 jal 0x000e9d24
0x000a7aa8 nop
0x000a7aac sw v0,-0x6ecc(gp)
0x000a7ab0 beq r0,r0,0x000a7b84
0x000a7ab4 sw r0,-0x6ed8(gp)
0x000a7ab8 lw v0,-0x6ec0(gp)
0x000a7abc nop
0x000a7ac0 beq s0,v0,0x000a7b58
0x000a7ac4 nop
0x000a7ac8 addiu asmTemp,r0,0xffff
0x000a7acc beq s0,asmTemp,0x000a7b58
0x000a7ad0 nop
0x000a7ad4 lw v0,-0x6eb8(gp)
0x000a7ad8 nop
0x000a7adc slti asmTemp,v0,0x0032
0x000a7ae0 bne asmTemp,r0,0x000a7b58
0x000a7ae4 nop
0x000a7ae8 lw v0,-0x6ed8(gp)
0x000a7aec nop
0x000a7af0 bne v0,r0,0x000a7b30
0x000a7af4 nop
0x000a7af8 lw a0,-0x6ecc(gp)
0x000a7afc jal 0x000e9fb4
0x000a7b00 nop
0x000a7b04 addiu v0,r0,0xffff
0x000a7b08 lui asmTemp,0x8014
0x000a7b0c sw v0,-0x6ed8(gp)
0x000a7b10 lw v1,-0x7ba0(asmTemp)
0x000a7b14 addiu v0,r0,0xffef
0x000a7b18 and v0,v1,v0
0x000a7b1c lui asmTemp,0x8014
0x000a7b20 sw v0,-0x7ba0(asmTemp)
0x000a7b24 addiu v0,r0,0x0001
0x000a7b28 lui asmTemp,0x8015
0x000a7b2c sb v0,0x57d7(asmTemp)
0x000a7b30 lw a0,-0x6ebc(gp)
0x000a7b34 jal 0x000ece20
0x000a7b38 nop
0x000a7b3c lui asmTemp,0x8013
0x000a7b40 lw a1,-0x0cb8(asmTemp)
0x000a7b44 jal 0x000ec538
0x000a7b48 addu a0,s0,r0
0x000a7b4c sw v0,-0x6ebc(gp)
0x000a7b50 sw r0,-0x6eb8(gp)
0x000a7b54 sw s0,-0x6ec0(gp)
0x000a7b58 lw v0,-0x6eb8(gp)
0x000a7b5c nop
0x000a7b60 addi v0,v0,0x0001
0x000a7b64 sw v0,-0x6eb8(gp)
0x000a7b68 lw v0,-0x6eb8(gp)
0x000a7b6c nop
0x000a7b70 slti asmTemp,v0,0x003c
0x000a7b74 bne asmTemp,r0,0x000a7b84
0x000a7b78 nop
0x000a7b7c addiu v0,r0,0xffff
0x000a7b80 sw v0,-0x6ec0(gp)
0x000a7b84 lw ra,0x0014(sp)
0x000a7b88 lw s0,0x0010(sp)
0x000a7b8c jr ra
0x000a7b90 addiu sp,sp,0x0018