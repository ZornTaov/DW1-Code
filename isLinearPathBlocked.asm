int isLinearPathBlocked(tileX1, tileY1, tileX2, tileY2) {
  if(tileX1 < 0)
    tileX1 = 0
  if(tileX2 < 0)
    tileX2 = 0
  if(tileY1 < 0)
    tileY1 = 0
  if(tileY2 < 0)
    tileY2 = 0
  if(tileX1 >= 100)
    tileX1 = 99
  if(tileX2 >= 100)
    tileX2 = 99
  if(tileY1 >= 100)
    tileY1 = 99
  if(tileY2 >= 100)
    tileY2 = 99
    
  if(tileX1 == tileX2 && tileY1 == tileY2)
    return 0
  
  diffY = tileY2 - tileY1
  diffX = tileX2 - tielX1
  
  lTileX = tileX1
  lTileY = tileY1
  
  if(absDiffX >= absDiffY) {
    absDiffX = abs(diffX)
    subStepCounter = absDiffX
    
    yStep = diffY / absDiffX
    ySubStep = diffY % absDiffX
    
    subStepDirection = ySubStep < 0 ? -1 : 1
    
    ySubStep = abs(ySubStep)
    
    for(x = 0; x < absDiffX; x++) {
      if(ySubStep != 0) {
        subStepCounter = subStepCounter - ySubStep
        
        if(subStepCounter <= 0) {
          lTileY = lTileY + subStepDirection
          subStepCounter = subStepCounter + absDiffX
        }
      }
      else
        lTileY = lTileY + yStep
      
      if(diffX > 0)
        lTileX++
      else
        lTileX--
      
      if(load(0x1AF398 + lTileX + lTileY * 100) & 0x0080 != 0)
        return 1
    }
  }
  else {
    absDiffY = abs(diffY)
    subStepCounter = absDiffY
    
    xStep = diffX / absDiffY
    xSubStep = diffX % absDiffY
    
    subStepDirection = xSubStep < 0 ? -1 : 1
    
    xSubStep = abs(xSubStep)
    
    for(y = 0; y < absDiffY; y++) {
      if(xSubStep != 0) {
        subStepCounter = subStepCounter - xSubStep
        
        if(subStepCounter <= 0) {
          lTileX = lTileX + subStepDirection
          subStepCounter = subStepCounter + absDiffY
        }
      }
      else
        lTileX = lTileX + xStep
    }
    
    if(diffY > 0)
      lTileY++
    else
      lTileY--
    
    if(load(0x1AF398 + lTileX + lTileY * 100) & 0x0080 != 0)
      return 1
  }
  
  return 0
}

0x000d3c70 addiu sp,sp,0xffc8
0x000d3c74 sw ra,0x0034(sp)
0x000d3c78 sw fp,0x0030(sp)
0x000d3c7c sw s7,0x002c(sp)
0x000d3c80 sw s6,0x0028(sp)
0x000d3c84 sw s5,0x0024(sp)
0x000d3c88 sw s4,0x0020(sp)
0x000d3c8c sw s3,0x001c(sp)
0x000d3c90 sw s2,0x0018(sp)
0x000d3c94 sw s1,0x0014(sp)
0x000d3c98 bgez a0,0x000d3ca4
0x000d3c9c sw s0,0x0010(sp)
0x000d3ca0 addu a0,r0,r0
0x000d3ca4 bgez a2,0x000d3cb0
0x000d3ca8 nop
0x000d3cac addu a2,r0,r0
0x000d3cb0 bgez a1,0x000d3cbc
0x000d3cb4 nop
0x000d3cb8 addu a1,r0,r0
0x000d3cbc bgez a3,0x000d3cc8
0x000d3cc0 nop
0x000d3cc4 addu a3,r0,r0
0x000d3cc8 slti asmTemp,a0,0x0064
0x000d3ccc bne asmTemp,r0,0x000d3cd8
0x000d3cd0 nop
0x000d3cd4 addiu a0,r0,0x0063
0x000d3cd8 slti asmTemp,a2,0x0064
0x000d3cdc bne asmTemp,r0,0x000d3ce8
0x000d3ce0 nop
0x000d3ce4 addiu a2,r0,0x0063
0x000d3ce8 slti asmTemp,a1,0x0064
0x000d3cec bne asmTemp,r0,0x000d3cf8
0x000d3cf0 nop
0x000d3cf4 addiu a1,r0,0x0063
0x000d3cf8 slti asmTemp,a3,0x0064
0x000d3cfc bne asmTemp,r0,0x000d3d08
0x000d3d00 nop
0x000d3d04 addiu a3,r0,0x0063
0x000d3d08 bne a0,a2,0x000d3d20
0x000d3d0c nop
0x000d3d10 bne a1,a3,0x000d3d20
0x000d3d14 nop
0x000d3d18 beq r0,r0,0x000d4004
0x000d3d1c addu v0,r0,r0
0x000d3d20 sub v0,a3,a1
0x000d3d24 sll s7,v0,0x10
0x000d3d28 sub v0,a2,a0
0x000d3d2c sll s6,v0,0x10
0x000d3d30 sra s6,s6,0x10
0x000d3d34 sll s2,a0,0x18
0x000d3d38 sll s1,a1,0x18
0x000d3d3c sra s7,s7,0x10
0x000d3d40 sra s2,s2,0x18
0x000d3d44 sra s1,s1,0x18
0x000d3d48 addu fp,s6,r0
0x000d3d4c jal 0x0009119c
0x000d3d50 addu a0,s6,r0
0x000d3d54 addu s0,v0,r0
0x000d3d58 addu s3,s7,r0
0x000d3d5c jal 0x0009119c
0x000d3d60 addu a0,s7,r0
0x000d3d64 slt asmTemp,s0,v0
0x000d3d68 bne asmTemp,r0,0x000d3ebc
0x000d3d6c nop
0x000d3d70 jal 0x0009119c
0x000d3d74 addu a0,fp,r0
0x000d3d78 sll s4,v0,0x10
0x000d3d7c sra s4,s4,0x10
0x000d3d80 sll s0,v0,0x10
0x000d3d84 div s3,s4
0x000d3d88 addu v1,s4,r0
0x000d3d8c mflo v0
0x000d3d90 sll s5,v0,0x10
0x000d3d94 nop
0x000d3d98 div s3,v1
0x000d3d9c sra s0,s0,0x10
0x000d3da0 mfhi v0
0x000d3da4 sll a0,v0,0x10
0x000d3da8 sra a0,a0,0x10
0x000d3dac bgez a0,0x000d3dc4
0x000d3db0 sra s5,s5,0x10
0x000d3db4 addiu v0,r0,0xffff
0x000d3db8 sll s3,v0,0x10
0x000d3dbc beq r0,r0,0x000d3dd0
0x000d3dc0 sra s3,s3,0x10
0x000d3dc4 addiu v0,r0,0x0001
0x000d3dc8 sll s3,v0,0x10
0x000d3dcc sra s3,s3,0x10
0x000d3dd0 jal 0x0009119c
0x000d3dd4 nop
0x000d3dd8 sll a0,v0,0x10
0x000d3ddc sra a0,a0,0x10
0x000d3de0 addu v0,r0,r0
0x000d3de4 beq r0,r0,0x000d3ea8
0x000d3de8 addu v1,s4,r0
0x000d3dec beq a0,r0,0x000d3e2c
0x000d3df0 nop
0x000d3df4 sub a1,s0,a0
0x000d3df8 sll s0,a1,0x10
0x000d3dfc sra s0,s0,0x10
0x000d3e00 bgtz s0,0x000d3e40
0x000d3e04 nop
0x000d3e08 sll a1,s3,0x18
0x000d3e0c sra a1,a1,0x18
0x000d3e10 add a1,s1,a1
0x000d3e14 sll s1,a1,0x18
0x000d3e18 add a1,s0,s4
0x000d3e1c sll s0,a1,0x10
0x000d3e20 sra s1,s1,0x18
0x000d3e24 beq r0,r0,0x000d3e40
0x000d3e28 sra s0,s0,0x10
0x000d3e2c sll a1,s5,0x18
0x000d3e30 sra a1,a1,0x18
0x000d3e34 add a1,s1,a1
0x000d3e38 sll s1,a1,0x18
0x000d3e3c sra s1,s1,0x18
0x000d3e40 blez s6,0x000d3e58
0x000d3e44 nop
0x000d3e48 addi a1,s2,0x0001
0x000d3e4c sll s2,a1,0x18
0x000d3e50 beq r0,r0,0x000d3e64
0x000d3e54 sra s2,s2,0x18
0x000d3e58 addi a1,s2,-0x0001
0x000d3e5c sll s2,a1,0x18
0x000d3e60 sra s2,s2,0x18
0x000d3e64 sll a1,s1,0x02
0x000d3e68 add a2,a1,s1
0x000d3e6c sll a1,a2,0x02
0x000d3e70 add a1,a2,a1
0x000d3e74 sll a1,a1,0x02
0x000d3e78 add a2,s2,a1
0x000d3e7c lui a1,0x801b
0x000d3e80 addiu a1,a1,0xf398
0x000d3e84 addu a1,a1,a2
0x000d3e88 lbu a1,0x0000(a1)
0x000d3e8c nop
0x000d3e90 andi a1,a1,0x0080
0x000d3e94 beq a1,r0,0x000d3ea4
0x000d3e98 nop
0x000d3e9c beq r0,r0,0x000d4004
0x000d3ea0 addiu v0,r0,0x0001
0x000d3ea4 addi v0,v0,0x0001
0x000d3ea8 slt asmTemp,v0,v1
0x000d3eac bne asmTemp,r0,0x000d3dec
0x000d3eb0 nop
0x000d3eb4 beq r0,r0,0x000d4004
0x000d3eb8 addu v0,r0,r0
0x000d3ebc jal 0x0009119c
0x000d3ec0 addu a0,s3,r0
0x000d3ec4 sll s4,v0,0x10
0x000d3ec8 sra s4,s4,0x10
0x000d3ecc sll s0,v0,0x10
0x000d3ed0 div fp,s4
0x000d3ed4 addu v1,s4,r0
0x000d3ed8 mflo v0
0x000d3edc sll s5,v0,0x10
0x000d3ee0 nop
0x000d3ee4 div fp,v1
0x000d3ee8 sra s0,s0,0x10
0x000d3eec mfhi v0
0x000d3ef0 sll a0,v0,0x10
0x000d3ef4 sra a0,a0,0x10
0x000d3ef8 bgez a0,0x000d3f10
0x000d3efc sra s5,s5,0x10
0x000d3f00 addiu v0,r0,0xffff
0x000d3f04 sll s3,v0,0x10
0x000d3f08 beq r0,r0,0x000d3f1c
0x000d3f0c sra s3,s3,0x10
0x000d3f10 addiu v0,r0,0x0001
0x000d3f14 sll s3,v0,0x10
0x000d3f18 sra s3,s3,0x10
0x000d3f1c jal 0x0009119c
0x000d3f20 nop
0x000d3f24 sll a0,v0,0x10
0x000d3f28 sra a0,a0,0x10
0x000d3f2c addu v0,r0,r0
0x000d3f30 beq r0,r0,0x000d3ff4
0x000d3f34 addu v1,s4,r0
0x000d3f38 beq a0,r0,0x000d3f78
0x000d3f3c nop
0x000d3f40 sub a1,s0,a0
0x000d3f44 sll s0,a1,0x10
0x000d3f48 sra s0,s0,0x10
0x000d3f4c bgtz s0,0x000d3f8c
0x000d3f50 nop
0x000d3f54 sll a1,s3,0x18
0x000d3f58 sra a1,a1,0x18
0x000d3f5c add a1,s2,a1
0x000d3f60 sll s2,a1,0x18
0x000d3f64 add a1,s0,s4
0x000d3f68 sll s0,a1,0x10
0x000d3f6c sra s2,s2,0x18
0x000d3f70 beq r0,r0,0x000d3f8c
0x000d3f74 sra s0,s0,0x10
0x000d3f78 sll a1,s5,0x18
0x000d3f7c sra a1,a1,0x18
0x000d3f80 add a1,s2,a1
0x000d3f84 sll s2,a1,0x18
0x000d3f88 sra s2,s2,0x18
0x000d3f8c blez s7,0x000d3fa4
0x000d3f90 nop
0x000d3f94 addi a1,s1,0x0001
0x000d3f98 sll s1,a1,0x18
0x000d3f9c beq r0,r0,0x000d3fb0
0x000d3fa0 sra s1,s1,0x18
0x000d3fa4 addi a1,s1,-0x0001
0x000d3fa8 sll s1,a1,0x18
0x000d3fac sra s1,s1,0x18
0x000d3fb0 sll a1,s1,0x02
0x000d3fb4 add a2,a1,s1
0x000d3fb8 sll a1,a2,0x02
0x000d3fbc add a1,a2,a1
0x000d3fc0 sll a1,a1,0x02
0x000d3fc4 add a2,s2,a1
0x000d3fc8 lui a1,0x801b
0x000d3fcc addiu a1,a1,0xf398
0x000d3fd0 addu a1,a1,a2
0x000d3fd4 lbu a1,0x0000(a1)
0x000d3fd8 nop
0x000d3fdc andi a1,a1,0x0080
0x000d3fe0 beq a1,r0,0x000d3ff0
0x000d3fe4 nop
0x000d3fe8 beq r0,r0,0x000d4004
0x000d3fec addiu v0,r0,0x0001
0x000d3ff0 addi v0,v0,0x0001
0x000d3ff4 slt asmTemp,v0,v1
0x000d3ff8 bne asmTemp,r0,0x000d3f38
0x000d3ffc nop
0x000d4000 addu v0,r0,r0
0x000d4004 lw ra,0x0034(sp)
0x000d4008 lw fp,0x0030(sp)
0x000d400c lw s7,0x002c(sp)
0x000d4010 lw s6,0x0028(sp)
0x000d4014 lw s5,0x0024(sp)
0x000d4018 lw s4,0x0020(sp)
0x000d401c lw s3,0x001c(sp)
0x000d4020 lw s2,0x0018(sp)
0x000d4024 lw s1,0x0014(sp)
0x000d4028 lw s0,0x0010(sp)
0x000d402c jr ra
0x000d4030 addiu sp,sp,0x0038