int getChampionEvolutionTarget(digimonType) {
  score = 0
  bestScore = 0
  bestDigimon = -1
  count = 0
  
  for(i = 0; i < 6; i++) {
    targetType = load(0x12B671 + (digimonType - 1) * 11 + i)
    
    if(targetType == -1)
      continue
    
    reqFlag = load(0x12AC06 + targetType * 0x1C)
    
    isMaxCM = reqFlag & 0x10
    isMaxBattles = reqFlag & 0x01
    
    requirementScore = calculateRequirementScore(digimonType, targetType, isMaxCM, isMaxBattles, bestDigimon)
    
    if(requirementScore < 3) // Digimon not enabled
      continue
    
    // add required stats to priority score, increase counter per stat
    if(load(0x12ABEE + targetType * 0x1C) != -1) { // HP
      score += load(0x1557F0) / 10
      count++
    }
    if(load(0x12ABF0 + targetType * 0x1C) != -1) { // MP
      score += load(0x1557F2) / 10
      count++
    }
    if(load(0x12ABF2 + targetType * 0x1C) != -1) { // Offense
      score += load(0x1557E0)
      count++
    }
    if(load(0x12ABF4 + targetType * 0x1C) != -1) { // Defense
      score += load(0x1557E2)
      count++
    }
    if(load(0x12ABF6 + targetType * 0x1C) != -1) { // Speed
      score += load(0x1557E4)
      count++
    }
    if(load(0x12ABF8 + targetType * 0x1C) != -1) { // Brains
      score += load(0x1557E6)
      count++
    }
    
    // divide score by counter
    score = score / count
    
    // if the score is better than the old best, overwrite it
    // Bug: Only reset score and count when this is the case, should reset all the time
    if(bestScore < score) {
      bestScore = score
      bestDigimon = targetType
      
      count = 0
      score = 0
    }
  }
  
  return bestDigimon
}

0x000e2f08 addiu sp,sp,0xffc8
0x000e2f0c sw ra,0x0034(sp)
0x000e2f10 sw s6,0x0030(sp)
0x000e2f14 sw s5,0x002c(sp)
0x000e2f18 sw s4,0x0028(sp)
0x000e2f1c sw s3,0x0024(sp)
0x000e2f20 addu s6,a0,r0
0x000e2f24 addi v1,s6,-0x0001
0x000e2f28 sll v0,v1,0x02
0x000e2f2c add v0,v0,v1
0x000e2f30 sll v0,v0,0x01
0x000e2f34 sw s2,0x0020(sp)
0x000e2f38 sw s1,0x001c(sp)
0x000e2f3c add v1,v0,v1
0x000e2f40 lui v0,0x8013
0x000e2f44 sw s0,0x0018(sp)
0x000e2f48 addiu v0,v0,0xb66c
0x000e2f4c addu v0,v0,v1
0x000e2f50 sll s0,r0,0x10
0x000e2f54 sll s3,r0,0x10
0x000e2f58 addiu s2,v0,0x0005
0x000e2f5c addiu s5,r0,0xffff
0x000e2f60 addu s1,r0,r0
0x000e2f64 sra s0,s0,0x10
0x000e2f68 sra s3,s3,0x10
0x000e2f6c beq r0,r0,0x000e31f8
0x000e2f70 addu s4,r0,r0
0x000e2f74 lb v0,0x0000(s2)
0x000e2f78 addiu asmTemp,r0,0xffff
0x000e2f7c bne v0,asmTemp,0x000e2f8c
0x000e2f80 addu a1,v0,r0
0x000e2f84 beq r0,r0,0x000e31f4
0x000e2f88 addiu s2,s2,0x0001
0x000e2f8c sll v0,a1,0x03
0x000e2f90 sub v0,v0,a1
0x000e2f94 sll v1,v0,0x02
0x000e2f98 lui v0,0x8013
0x000e2f9c addiu v0,v0,0xac06
0x000e2fa0 addu v0,v0,v1
0x000e2fa4 lb v1,0x0000(v0)
0x000e2fa8 addu a0,s6,r0
0x000e2fac sll v0,s5,0x18
0x000e2fb0 sra v0,v0,0x18
0x000e2fb4 sw v0,0x0010(sp)
0x000e2fb8 andi v0,v1,0x0010
0x000e2fbc sra v0,v0,0x04
0x000e2fc0 sll a2,v0,0x18
0x000e2fc4 andi v0,v1,0x0001
0x000e2fc8 sll a3,v0,0x18
0x000e2fcc sra a2,a2,0x18
0x000e2fd0 jal 0x000e26b8
0x000e2fd4 sra a3,a3,0x18
0x000e2fd8 slti asmTemp,v0,0x0003
0x000e2fdc bne asmTemp,r0,0x000e31f0
0x000e2fe0 nop
0x000e2fe4 lb a0,0x0000(s2)
0x000e2fe8 addiu asmTemp,r0,0xffff
0x000e2fec sll v0,a0,0x03
0x000e2ff0 sub v0,v0,a0
0x000e2ff4 addu v1,a0,r0
0x000e2ff8 lui a0,0x8013
0x000e2ffc sll a1,v0,0x02
0x000e3000 addiu a0,a0,0xabee
0x000e3004 addu a0,a0,a1
0x000e3008 lh a0,0x0000(a0)
0x000e300c nop
0x000e3010 beq a0,asmTemp,0x000e305c
0x000e3014 addu v0,a1,r0
0x000e3018 lui asmTemp,0x8015
0x000e301c lui a0,0x6666
0x000e3020 lh a1,0x57f0(asmTemp)
0x000e3024 ori a0,a0,0x6667
0x000e3028 mult a0,a1
0x000e302c mfhi a0
0x000e3030 srl a1,a1,0x1f
0x000e3034 sra a0,a0,0x02
0x000e3038 addu a0,a0,a1
0x000e303c sll a0,a0,0x10
0x000e3040 sra a0,a0,0x10
0x000e3044 add a0,s0,a0
0x000e3048 sll s0,a0,0x10
0x000e304c addi a0,s1,0x0001
0x000e3050 sll s1,a0,0x10
0x000e3054 sra s0,s0,0x10
0x000e3058 sra s1,s1,0x10
0x000e305c lui a0,0x8013
0x000e3060 addiu a0,a0,0xabf0
0x000e3064 addu a0,a0,v0
0x000e3068 lh a0,0x0000(a0)
0x000e306c addiu asmTemp,r0,0xffff
0x000e3070 beq a0,asmTemp,0x000e30bc
0x000e3074 nop
0x000e3078 lui asmTemp,0x8015
0x000e307c lui a0,0x6666
0x000e3080 lh a1,0x57f2(asmTemp)
0x000e3084 ori a0,a0,0x6667
0x000e3088 mult a0,a1
0x000e308c mfhi a0
0x000e3090 srl a1,a1,0x1f
0x000e3094 sra a0,a0,0x02
0x000e3098 addu a0,a0,a1
0x000e309c sll a0,a0,0x10
0x000e30a0 sra a0,a0,0x10
0x000e30a4 add a0,s0,a0
0x000e30a8 sll s0,a0,0x10
0x000e30ac addi a0,s1,0x0001
0x000e30b0 sll s1,a0,0x10
0x000e30b4 sra s0,s0,0x10
0x000e30b8 sra s1,s1,0x10
0x000e30bc lui a0,0x8013
0x000e30c0 addiu a0,a0,0xabf2
0x000e30c4 addu a0,a0,v0
0x000e30c8 lh a0,0x0000(a0)
0x000e30cc addiu asmTemp,r0,0xffff
0x000e30d0 beq a0,asmTemp,0x000e30fc
0x000e30d4 nop
0x000e30d8 lui asmTemp,0x8015
0x000e30dc lh a0,0x57e0(asmTemp)
0x000e30e0 nop
0x000e30e4 add a0,s0,a0
0x000e30e8 sll s0,a0,0x10
0x000e30ec addi a0,s1,0x0001
0x000e30f0 sll s1,a0,0x10
0x000e30f4 sra s0,s0,0x10
0x000e30f8 sra s1,s1,0x10
0x000e30fc lui a0,0x8013
0x000e3100 addiu a0,a0,0xabf4
0x000e3104 addu a0,a0,v0
0x000e3108 lh a0,0x0000(a0)
0x000e310c addiu asmTemp,r0,0xffff
0x000e3110 beq a0,asmTemp,0x000e313c
0x000e3114 nop
0x000e3118 lui asmTemp,0x8015
0x000e311c lh a0,0x57e2(asmTemp)
0x000e3120 nop
0x000e3124 add a0,s0,a0
0x000e3128 sll s0,a0,0x10
0x000e312c addi a0,s1,0x0001
0x000e3130 sll s1,a0,0x10
0x000e3134 sra s0,s0,0x10
0x000e3138 sra s1,s1,0x10
0x000e313c lui a0,0x8013
0x000e3140 addiu a0,a0,0xabf6
0x000e3144 addu a0,a0,v0
0x000e3148 lh a0,0x0000(a0)
0x000e314c addiu asmTemp,r0,0xffff
0x000e3150 beq a0,asmTemp,0x000e317c
0x000e3154 nop
0x000e3158 lui asmTemp,0x8015
0x000e315c lh a0,0x57e4(asmTemp)
0x000e3160 nop
0x000e3164 add a0,s0,a0
0x000e3168 sll s0,a0,0x10
0x000e316c addi a0,s1,0x0001
0x000e3170 sll s1,a0,0x10
0x000e3174 sra s0,s0,0x10
0x000e3178 sra s1,s1,0x10
0x000e317c lui a0,0x8013
0x000e3180 addiu a0,a0,0xabf8
0x000e3184 addu v0,a0,v0
0x000e3188 lh v0,0x0000(v0)
0x000e318c addiu asmTemp,r0,0xffff
0x000e3190 beq v0,asmTemp,0x000e31bc
0x000e3194 nop
0x000e3198 lui asmTemp,0x8015
0x000e319c lh v0,0x57e6(asmTemp)
0x000e31a0 nop
0x000e31a4 add v0,s0,v0
0x000e31a8 sll s0,v0,0x10
0x000e31ac addi v0,s1,0x0001
0x000e31b0 sll s1,v0,0x10
0x000e31b4 sra s0,s0,0x10
0x000e31b8 sra s1,s1,0x10
0x000e31bc div s0,s1
0x000e31c0 mflo v0
0x000e31c4 sll s0,v0,0x10
0x000e31c8 sra s0,s0,0x10
0x000e31cc slt asmTemp,s3,s0
0x000e31d0 beq asmTemp,r0,0x000e31f0
0x000e31d4 nop
0x000e31d8 sll s3,s0,0x10
0x000e31dc sll s0,r0,0x10
0x000e31e0 addu s5,v1,r0
0x000e31e4 sra s3,s3,0x10
0x000e31e8 addu s1,r0,r0
0x000e31ec sra s0,s0,0x10
0x000e31f0 addiu s2,s2,0x0001
0x000e31f4 addi s4,s4,0x0001
0x000e31f8 slti asmTemp,s4,0x0006
0x000e31fc bne asmTemp,r0,0x000e2f74
0x000e3200 nop
0x000e3204 sll v0,s5,0x10
0x000e3208 lw ra,0x0034(sp)
0x000e320c lw s6,0x0030(sp)
0x000e3210 lw s5,0x002c(sp)
0x000e3214 lw s4,0x0028(sp)
0x000e3218 lw s3,0x0024(sp)
0x000e321c lw s2,0x0020(sp)
0x000e3220 lw s1,0x001c(sp)
0x000e3224 lw s0,0x0018(sp)
0x000e3228 sra v0,v0,0x10
0x000e322c jr ra
0x000e3230 addiu sp,sp,0x0038