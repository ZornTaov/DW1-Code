int gpuLoadImage(gpuFunctionPtr, headerPtr, headerSize, dataPtr) {
  setGPUTimeout()
  
  // empty queue
  while((load(0x116CD4) + 1) & 0x3F == load(0x116CD8)) {
    if(checkGPUTimeout() != 0)
      return -1
      
    processImageQueue()
  }
  
  irqMask = setIRQMask(0)
  store(0x116C30, irqMask)
  store(0x116C5C, 1)
  
  unknownValue = load(0x116C55)
  dmaCtrlReg = load(0x116C1C)
  
  // queue is empty, DMA is ready and unknown OR unknown is 0 -> do stuff right away
  if(unknownValue == 0 || (load(0x116CD4) == load(0x116CD8) && load(dmaCtrlReg) & 0x01000000 == 0 && load(0x116C60) == 0)) {
    
    statusRegPtr = load(0x116C10)
    while(load(statusRegPtr) & 0x04000000 == 0); // wait till GPU ready to receive command
    
    gpuFunctionPtr(headerPtr, dataPtr)
    
    irqMask = load(0x116C30)
    setIRQMask(irqMask)
    return 0
  }
  
  proxySetDMAIRQHandler(2, 0x93DDC) // set DMA2 IRQ Handler to processImageQueue
  
  // add call to queue
  queuePtrOffset = load(0x116CD4) * 96
      
  if(headerSize != 0) {
    for(i = 0; i >= headerSize / 4; i++) {
      headerData = load(headerPtr + i * 4)
      store(0x1355C0 + queuePtrOffset + i * 4, headerData) // header
    }
    
    store(0x1355B8 + queuePtrOffset, 0x1355C0 + queuePtrOffset) // headerPtr
  }
  else 
    store(0x1355B8 + queuePtrOffset, headerPtr) // headerPtr
  
  store(0x1355BC + queuePtrOffset, dataPtr) // data ptr
  store(0x1355B4 + queuePtrOffset, gpuFunctionPtr) // func ptr
  
  newQueueEnd = (load(0x116CD4) + 1) & 0x3F
  store(0x116CD4, newQueueEnd)
  
  irqMask = load(0x116C30)
  setIRQMask(irqMask)
  processImageQueue()
  
  return (load(0x116CD4) - load(0x116CD8)) & 0x3F // remaining queue size
}

0x00093b2c addiu sp,sp,0xffd8
0x00093b30 sw s3,0x001c(sp)
0x00093b34 addu s3,a0,r0
0x00093b38 sw s0,0x0010(sp)
0x00093b3c addu s0,a1,r0
0x00093b40 sw s1,0x0014(sp)
0x00093b44 addu s1,a2,r0
0x00093b48 sw s2,0x0018(sp)
0x00093b4c sw ra,0x0020(sp)
0x00093b50 jal 0x000942c8
0x00093b54 addu s2,a3,r0
0x00093b58 j 0x00093b78
0x00093b5c nop
0x00093b60 jal 0x000942fc
0x00093b64 nop
0x00093b68 bne v0,r0,0x00093dc0
0x00093b6c addiu v0,r0,0xffff
0x00093b70 jal 0x00093ddc
0x00093b74 nop
0x00093b78 lui v0,0x8011
0x00093b7c lw v0,0x6cd4(v0)
0x00093b80 lui v1,0x8011
0x00093b84 lw v1,0x6cd8(v1)
0x00093b88 addiu v0,v0,0x0001
0x00093b8c andi v0,v0,0x003f
0x00093b90 beq v0,v1,0x00093b60
0x00093b94 nop
0x00093b98 jal 0x00092450
0x00093b9c addu a0,r0,r0
0x00093ba0 lui a0,0x8011
0x00093ba4 addiu a0,a0,0x6c54
0x00093ba8 lui asmTemp,0x8011
0x00093bac sw v0,0x6c30(asmTemp)
0x00093bb0 lbu v1,0x0001(a0)
0x00093bb4 addiu v0,r0,0x0001
0x00093bb8 beq v1,r0,0x00093c0c
0x00093bbc sw v0,0x0008(a0)
0x00093bc0 lui v1,0x8011
0x00093bc4 lw v1,0x6cd4(v1)
0x00093bc8 lui v0,0x8011
0x00093bcc lw v0,0x6cd8(v0)
0x00093bd0 nop
0x00093bd4 bne v1,v0,0x00093c50
0x00093bd8 nop
0x00093bdc lui v0,0x8011
0x00093be0 lw v0,0x6c1c(v0)
0x00093be4 nop
0x00093be8 lw v0,0x0000(v0)
0x00093bec lui v1,0x0100
0x00093bf0 and v0,v0,v1
0x00093bf4 bne v0,r0,0x00093c50
0x00093bf8 nop
0x00093bfc lw v0,0x000c(a0)
0x00093c00 nop
0x00093c04 bne v0,r0,0x00093c50
0x00093c08 nop
0x00093c0c lui v1,0x8011
0x00093c10 lw v1,0x6c10(v1)
0x00093c14 lui a0,0x0400
0x00093c18 lw v0,0x0000(v1)
0x00093c1c nop
0x00093c20 and v0,v0,a0
0x00093c24 beq v0,r0,0x00093c18
0x00093c28 nop
0x00093c2c addu a0,s0,r0
0x00093c30 jalr s3,ra
0x00093c34 addu a1,s2,r0
0x00093c38 lui a0,0x8011
0x00093c3c lw a0,0x6c30(a0)
0x00093c40 jal 0x00092450
0x00093c44 nop
0x00093c48 j 0x00093dc0
0x00093c4c addu v0,r0,r0
0x00093c50 lui a1,0x8009
0x00093c54 addiu a1,a1,0x3ddc
0x00093c58 jal 0x000923ac
0x00093c5c addiu a0,r0,0x0002
0x00093c60 beq s1,r0,0x00093d0c
0x00093c64 addu a2,r0,r0
0x00093c68 lui t0,0x8013
0x00093c6c addiu t0,t0,0x55c0
0x00093c70 addu a3,s0,r0
0x00093c74 addu v0,s1,r0
0x00093c78 bgez v0,0x00093c84
0x00093c7c nop
0x00093c80 addiu v0,v0,0x0003
0x00093c84 sra v0,v0,0x02
0x00093c88 slt v0,a2,v0
0x00093c8c beq v0,r0,0x00093cc8
0x00093c90 sll a0,a2,0x02
0x00093c94 lw a1,0x0000(a3)
0x00093c98 addiu a3,a3,0x0004
0x00093c9c lui v1,0x8011
0x00093ca0 lw v1,0x6cd4(v1)
0x00093ca4 addiu a2,a2,0x0001
0x00093ca8 sll v0,v1,0x01
0x00093cac addu v0,v0,v1
0x00093cb0 sll v0,v0,0x05
0x00093cb4 addu v0,v0,t0
0x00093cb8 addu a0,a0,v0
0x00093cbc sw a1,0x0000(a0)
0x00093cc0 j 0x00093c78
0x00093cc4 addu v0,s1,r0
0x00093cc8 lui v0,0x8011
0x00093ccc lw v0,0x6cd4(v0)
0x00093cd0 lui v1,0x8011
0x00093cd4 lw v1,0x6cd4(v1)
0x00093cd8 sll a0,v0,0x01
0x00093cdc addu a0,a0,v0
0x00093ce0 sll a0,a0,0x05
0x00093ce4 sll v0,v1,0x01
0x00093ce8 addu v0,v0,v1
0x00093cec sll v0,v0,0x05
0x00093cf0 lui v1,0x8013
0x00093cf4 addiu v1,v1,0x55c0
0x00093cf8 addu v0,v0,v1
0x00093cfc lui asmTemp,0x8013
0x00093d00 addu asmTemp,asmTemp,a0
0x00093d04 j 0x00093d30
0x00093d08 sw v0,0x55b8(asmTemp)
0x00093d0c lui v1,0x8011
0x00093d10 lw v1,0x6cd4(v1)
0x00093d14 nop
0x00093d18 sll v0,v1,0x01
0x00093d1c addu v0,v0,v1
0x00093d20 sll v0,v0,0x05
0x00093d24 lui asmTemp,0x8013
0x00093d28 addu asmTemp,asmTemp,v0
0x00093d2c sw s0,0x55b8(asmTemp)
0x00093d30 lui v1,0x8011
0x00093d34 lw v1,0x6cd4(v1)
0x00093d38 nop
0x00093d3c sll v0,v1,0x01
0x00093d40 addu v0,v0,v1
0x00093d44 sll v0,v0,0x05
0x00093d48 lui asmTemp,0x8013
0x00093d4c addu asmTemp,asmTemp,v0
0x00093d50 sw s2,0x55bc(asmTemp)
0x00093d54 lui v1,0x8011
0x00093d58 lw v1,0x6cd4(v1)
0x00093d5c nop
0x00093d60 sll v0,v1,0x01
0x00093d64 addu v0,v0,v1
0x00093d68 sll v0,v0,0x05
0x00093d6c lui asmTemp,0x8013
0x00093d70 addu asmTemp,asmTemp,v0
0x00093d74 sw s3,0x55b4(asmTemp)
0x00093d78 lui v0,0x8011
0x00093d7c lw v0,0x6cd4(v0)
0x00093d80 lui a0,0x8011
0x00093d84 lw a0,0x6c30(a0)
0x00093d88 addiu v0,v0,0x0001
0x00093d8c andi v0,v0,0x003f
0x00093d90 lui asmTemp,0x8011
0x00093d94 jal 0x00092450
0x00093d98 sw v0,0x6cd4(asmTemp)
0x00093d9c jal 0x00093ddc
0x00093da0 nop
0x00093da4 lui v0,0x8011
0x00093da8 lw v0,0x6cd4(v0)
0x00093dac lui v1,0x8011
0x00093db0 lw v1,0x6cd8(v1)
0x00093db4 nop
0x00093db8 subu v0,v0,v1
0x00093dbc andi v0,v0,0x003f
0x00093dc0 lw ra,0x0020(sp)
0x00093dc4 lw s3,0x001c(sp)
0x00093dc8 lw s2,0x0018(sp)
0x00093dcc lw s1,0x0014(sp)
0x00093dd0 lw s0,0x0010(sp)
0x00093dd4 jr ra
0x00093dd8 addiu sp,sp,0x0028