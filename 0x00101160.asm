0x00101160(param) {
  instructionId = load(0x134FE8)  // active instruction
  
  if(instructionId == 0x10) {
    if(0x000FFC1C() == -1)
      return
    
    v1 = load(0x1BE952)
    v0 = load(0x1BE948)
    
    store(0x134FDC, v0 + v1 * 2)
    
    v0 = load(0x134FDC)
    v1 = load(v0)
    v0 = load(0x134FD8)
    store(0x134FDC, v0 + v1)
  }
  else if(instructionId == 0x1A) {
    0x000FFDF4()
  }
  else if(instructionId == 0x64)  {
    v0 = load(0x135008)
    if(v0 != 1) {
      if(0x000FFDF4() != 1)
        return
      
      v0 = load(0x135014)
      store(0x135008, 0)
      store(0x134FFA, v0)
      store(0x134FE8, 100)
    }
    else if(v0 != 2) {
      if(0x000FFC1C() == -1)
        return
      
      v1 = load(0x1BE952)
      v0 = load(0x135014)
      store(0x135008, 0)
      store(0x134FFA, v0 + v1)
      store(0x134FE8, 100)
    }
    else if(v0 != 3) {
      if(0x0000FFF24() != 1)
        return
      
      store(0x134FE8, 100)
      store(0x135008, 0)
    }
  }
}

0x00101160 lbu v0,-0x6b44(gp)
0x00101164 addiu sp,sp,0xffe8
0x00101168 sw ra,0x0010(sp)
0x0010116c addiu asmTemp,r0,0x0010
0x00101170 bne v0,asmTemp,0x001011c8
0x00101174 addu v1,v0,r0
0x00101178 jal 0x000ffc1c
0x0010117c nop
0x00101180 ori asmTemp,r0,0xffff
0x00101184 beq v0,asmTemp,0x001012ac
0x00101188 nop
0x0010118c lui asmTemp,0x801c
0x00101190 lhu v1,-0x16ae(asmTemp)
0x00101194 lui asmTemp,0x801c
0x00101198 lw v0,-0x16b8(asmTemp)
0x0010119c sll v1,v1,0x01
0x001011a0 addu v0,v0,v1
0x001011a4 sw v0,-0x6b50(gp)
0x001011a8 lw v0,-0x6b50(gp)
0x001011ac nop
0x001011b0 lhu v1,0x0000(v0)
0x001011b4 lw v0,-0x6b54(gp)
0x001011b8 nop
0x001011bc addu v0,v0,v1
0x001011c0 beq r0,r0,0x001012ac
0x001011c4 sw v0,-0x6b50(gp)
0x001011c8 addiu asmTemp,r0,0x001a
0x001011cc bne v1,asmTemp,0x001011e4
0x001011d0 nop
0x001011d4 jal 0x000ffdf4
0x001011d8 nop
0x001011dc beq r0,r0,0x001012b0
0x001011e0 lw ra,0x0010(sp)
0x001011e4 addiu asmTemp,r0,0x0064
0x001011e8 bne v1,asmTemp,0x001012ac
0x001011ec nop
0x001011f0 lbu v0,-0x6b24(gp)
0x001011f4 addiu asmTemp,r0,0x0003
0x001011f8 beq v0,asmTemp,0x0010128c
0x001011fc nop
0x00101200 addiu asmTemp,r0,0x0002
0x00101204 beq v0,asmTemp,0x00101254
0x00101208 nop
0x0010120c addiu asmTemp,r0,0x0001
0x00101210 beq v0,asmTemp,0x00101228
0x00101214 nop
0x00101218 beq v0,r0,0x001012ac
0x0010121c nop
0x00101220 beq r0,r0,0x001012b0
0x00101224 lw ra,0x0010(sp)
0x00101228 jal 0x000ffdf4
0x0010122c nop
0x00101230 addiu asmTemp,r0,0x0001
0x00101234 bne v0,asmTemp,0x001012ac
0x00101238 nop
0x0010123c lhu v0,-0x6b18(gp)
0x00101240 sb r0,-0x6b24(gp)
0x00101244 sh v0,-0x6b32(gp)
0x00101248 addiu v0,r0,0x0064
0x0010124c beq r0,r0,0x001012ac
0x00101250 sb v0,-0x6b44(gp)
0x00101254 jal 0x000ffc1c
0x00101258 nop
0x0010125c ori asmTemp,r0,0xffff
0x00101260 beq v0,asmTemp,0x001012ac
0x00101264 nop
0x00101268 lui asmTemp,0x801c
0x0010126c lhu v1,-0x16ae(asmTemp)
0x00101270 lhu v0,-0x6b18(gp)
0x00101274 sb r0,-0x6b24(gp)
0x00101278 add v0,v0,v1
0x0010127c sh v0,-0x6b32(gp)
0x00101280 addiu v0,r0,0x0064
0x00101284 beq r0,r0,0x001012ac
0x00101288 sb v0,-0x6b44(gp)
0x0010128c jal 0x000fff24
0x00101290 nop
0x00101294 addiu asmTemp,r0,0x0001
0x00101298 bne v0,asmTemp,0x001012ac
0x0010129c nop
0x001012a0 addiu v0,r0,0x0064
0x001012a4 sb v0,-0x6b44(gp)
0x001012a8 sb r0,-0x6b24(gp)
0x001012ac lw ra,0x0010(sp)
0x001012b0 nop
0x001012b4 jr ra
0x001012b8 addiu sp,sp,0x0018