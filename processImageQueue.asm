int processImageQueue() {
  dmaChanControlPtr = load(0x116C1C)
  
  if(load(dmaChanControlPtr) & 0x01000000 != 0) // IRQ1 on
    return 1
  
  store(0x116C34, setIRQMask(0))
  
  // empty queue while DMA is ready
  while(load(0x116CD4) != load(0x116CD8) && load(dmaChanControlPtr) & 0x01000000 == 0) { // IRQ1 on
    currentQueueElement = load(0x116CD8)
    nextQueueElement = (currentQueueElement + 1) & 0x3F
    lastQueueElement = load(0x116CD4)
    
    if(nextQueueElement == lastQueueElement && load(0x116C60) == 0)
      proxySetDMAIRQHandler(2, 0)
    
    statusRegPtr = load(0x116C10) // 0x1F801814, GPU Status Register
    while(load(statusRegPtr) & 0x04000000 == 0); // wait till GPU ready to receive command
    
    functionPtr = load(0x1355B4 + currentQueueElement * 96) // option A: 0x0009355C, 
    headerPtr = load(0x1355B8 + currentQueueElement * 96)
    dataPtr = load(0x1355BC + currentQueueElement * 96)
    
    functionPtr(headerPtr, dataPtr)
    
    store(0x116CD8, nextQueueElement)
  }
      
  oldIRQMask = load(0x116C34)
  setIRQMask(oldIRQMask)
  
  if(load(0x116CD4) != load(0x116CD8) 
    && load(dmaChanControlPtr) & 0x01000000 == 0 // IRQ1 on
    && load(0x116C5C) != 0) {
    
    functionPtr = load(0x116C60)
    if(functionPtr != 0) {
      store(0x116C5C, 0)
      functionPtr() // call functionPtr
    }
  }
  
  return (load(0x116CD4) - load(0x116CD8)) & 0x3F // remaining queue size
}

0x00093ddc lui v0,0x8011
0x00093de0 lw v0,0x6c1c(v0)
0x00093de4 addiu sp,sp,0xffe0
0x00093de8 sw ra,0x0018(sp)
0x00093dec sw s1,0x0014(sp)
0x00093df0 sw s0,0x0010(sp)
0x00093df4 lw v0,0x0000(v0)
0x00093df8 lui s0,0x0100
0x00093dfc and v0,v0,s0
0x00093e00 bne v0,r0,0x00094028
0x00093e04 addiu v0,r0,0x0001
0x00093e08 jal 0x00092450
0x00093e0c addu a0,r0,r0
0x00093e10 lui a0,0x8011
0x00093e14 lw a0,0x6cd4(a0)
0x00093e18 lui v1,0x8011
0x00093e1c lw v1,0x6cd8(v1)
0x00093e20 lui asmTemp,0x8011
0x00093e24 beq a0,v1,0x00093f8c
0x00093e28 sw v0,0x6c34(asmTemp)
0x00093e2c lui v0,0x8011
0x00093e30 lw v0,0x6c1c(v0)
0x00093e34 nop
0x00093e38 lw v0,0x0000(v0)
0x00093e3c nop
0x00093e40 and v0,v0,s0
0x00093e44 bne v0,r0,0x00093f8c
0x00093e48 nop
0x00093e4c lui s1,0x0400
0x00093e50 lui s0,0x0100
0x00093e54 lui v0,0x8011
0x00093e58 lw v0,0x6cd8(v0)
0x00093e5c lui v1,0x8011
0x00093e60 lw v1,0x6cd4(v1)
0x00093e64 addiu v0,v0,0x0001
0x00093e68 andi v0,v0,0x003f
0x00093e6c bne v0,v1,0x00093e90
0x00093e70 nop
0x00093e74 lui v0,0x8011
0x00093e78 lw v0,0x6c60(v0)
0x00093e7c nop
0x00093e80 bne v0,r0,0x00093e90
0x00093e84 addiu a0,r0,0x0002
0x00093e88 jal 0x000923ac
0x00093e8c addu a1,r0,r0
0x00093e90 lui v1,0x8011
0x00093e94 lw v1,0x6c10(v1)
0x00093e98 nop
0x00093e9c lw v0,0x0000(v1)
0x00093ea0 nop
0x00093ea4 and v0,v0,s1
0x00093ea8 bne v0,r0,0x00093ec4
0x00093eac lui a0,0x0400
0x00093eb0 lw v0,0x0000(v1)
0x00093eb4 nop
0x00093eb8 and v0,v0,a0
0x00093ebc beq v0,r0,0x00093eb0
0x00093ec0 nop
0x00093ec4 lui a1,0x8011
0x00093ec8 lw a1,0x6cd8(a1)
0x00093ecc lui v1,0x8011
0x00093ed0 lw v1,0x6cd8(v1)
0x00093ed4 nop
0x00093ed8 sll v0,v1,0x01
0x00093edc addu v0,v0,v1
0x00093ee0 sll v0,v0,0x05
0x00093ee4 sll v1,a1,0x01
0x00093ee8 addu v1,v1,a1
0x00093eec lui a0,0x8013
0x00093ef0 addu a0,a0,v0
0x00093ef4 lw a0,0x55b8(a0)
0x00093ef8 lui a1,0x8011
0x00093efc lw a1,0x6cd8(a1)
0x00093f00 sll v1,v1,0x05
0x00093f04 sll v0,a1,0x01
0x00093f08 addu v0,v0,a1
0x00093f0c sll v0,v0,0x05
0x00093f10 lui a1,0x8013
0x00093f14 addu a1,a1,v0
0x00093f18 lw a1,0x55bc(a1)
0x00093f1c lui v0,0x8013
0x00093f20 addu v0,v0,v1
0x00093f24 lw v0,0x55b4(v0)
0x00093f28 nop
0x00093f2c jalr v0,ra
0x00093f30 nop
0x00093f34 lui v0,0x8011
0x00093f38 lw v0,0x6cd8(v0)
0x00093f3c nop
0x00093f40 addiu v0,v0,0x0001
0x00093f44 andi v0,v0,0x003f
0x00093f48 lui asmTemp,0x8011
0x00093f4c sw v0,0x6cd8(asmTemp)
0x00093f50 lui v1,0x8011
0x00093f54 lw v1,0x6cd4(v1)
0x00093f58 lui v0,0x8011
0x00093f5c lw v0,0x6cd8(v0)
0x00093f60 nop
0x00093f64 beq v1,v0,0x00093f8c
0x00093f68 nop
0x00093f6c lui v0,0x8011
0x00093f70 lw v0,0x6c1c(v0)
0x00093f74 nop
0x00093f78 lw v0,0x0000(v0)
0x00093f7c nop
0x00093f80 and v0,v0,s0
0x00093f84 beq v0,r0,0x00093e54
0x00093f88 nop
0x00093f8c lui a0,0x8011
0x00093f90 lw a0,0x6c34(a0)
0x00093f94 jal 0x00092450
0x00093f98 nop
0x00093f9c lui v1,0x8011
0x00093fa0 lw v1,0x6cd4(v1)
0x00093fa4 lui v0,0x8011
0x00093fa8 lw v0,0x6cd8(v0)
0x00093fac nop
0x00093fb0 bne v1,v0,0x0009400c
0x00093fb4 nop
0x00093fb8 lui v0,0x8011
0x00093fbc lw v0,0x6c1c(v0)
0x00093fc0 nop
0x00093fc4 lw v0,0x0000(v0)
0x00093fc8 lui v1,0x0100
0x00093fcc and v0,v0,v1
0x00093fd0 bne v0,r0,0x0009400c
0x00093fd4 nop
0x00093fd8 lui v1,0x8011
0x00093fdc addiu v1,v1,0x6c5c
0x00093fe0 lw v0,0x0000(v1)
0x00093fe4 nop
0x00093fe8 beq v0,r0,0x0009400c
0x00093fec nop
0x00093ff0 lw a0,0x0004(v1)
0x00093ff4 nop
0x00093ff8 beq a0,r0,0x0009400c
0x00093ffc addiu v0,v1,0xfff8
0x00094000 sw r0,0x0008(v0)
0x00094004 jalr a0,ra
0x00094008 nop
0x0009400c lui v0,0x8011
0x00094010 lw v0,0x6cd4(v0)
0x00094014 lui v1,0x8011
0x00094018 lw v1,0x6cd8(v1)
0x0009401c nop
0x00094020 subu v0,v0,v1
0x00094024 andi v0,v0,0x003f
0x00094028 lw ra,0x0018(sp)
0x0009402c lw s1,0x0014(sp)
0x00094030 lw s0,0x0010(sp)
0x00094034 jr ra
0x00094038 addiu sp,sp,0x0020
