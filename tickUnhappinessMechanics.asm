void tickUnhappinessMechanics() {
  happiness = load(0x13848A)
  currentFrame = load(0x134F08)
  previousFrame = load(0x134F06)
  
  // perform unhappiness check every 200 frames
  if(load(0x138460) == 0 && happiness < 0 && currentFrame % 200 == 0 && currentFrame != previousFrame) {
    chance = -happiness - load(0x138488) // discipline
    
    if(random(100)) < chance)
      store(0x138460, load(0x138460) | 0x10)
  }
  
  // unhappiness tick
  if(load(0x138460) & 0x10 != 0 && currentFrame != previousFrame) {
    // increase happiness by 1 per 15 frames
    if(currentFrame % 15 == 0)
      store(0x13848A, load(0x13848A) + 1)
    
    // reduce stats by 2% per 300 frames
    if(currentFrame % 300 == 0) {
      dataPtr = 0x1557E0
      
      store(dataPtr + 0x10, load(dataPtr + 0x10) * 0.98)
      store(dataPtr + 0x12, load(dataPtr + 0x12) * 0.98)
      store(dataPtr + 0x00, load(dataPtr + 0x00) * 0.98)
      store(dataPtr + 0x02, load(dataPtr + 0x02) * 0.98)
      store(dataPtr + 0x04, load(dataPtr + 0x04) * 0.98)
      store(dataPtr + 0x06, load(dataPtr + 0x06) * 0.98)
      
      if(load(dataPtr + 0x10) <= 0)
        store(dataPtr + 0x10, 1)
      if(load(dataPtr + 0x12) <= 0)
        store(dataPtr + 0x12, 1)
      if(load(dataPtr + 0x00) <= 0)
        store(dataPtr + 0x00, 1)
      if(load(dataPtr + 0x02) <= 0)
        store(dataPtr + 0x02, 1)
      if(load(dataPtr + 0x04) <= 0)
        store(dataPtr + 0x04, 1)
      if(load(dataPtr + 0x06) <= 0)
        store(dataPtr + 0x06, 1)
      
      maxHP = load(dataPtr + 0x10)
      currentHP = load(dataPtr + 0x14)
      
      if(currentHP >= maxHP)
        store(dataPtr + 0x14, maxHP)
      
      maxMP = load(dataPtr + 0x12)
      currentMP = load(dataPtr + 0x16)
      
      if(currentMP >= maxMP)
        store(dataPtr + 0x16, maxMP)
    }
  }
  
  // remove butterfly if happiness is >= 0
  conditionFlag = load(0x138460)
  happiness = load(0x13848A)
    
  if(conditionFlag & 0x10 != 0 && happiness >= 0) {
    store(0x138460, conditionFlag & 0xFFEF)
    
    store(0x1557D7, 1)
    unsetButterfly(load(0x134C60))
    store(0x134C54, -1)
  }
}

0x000a5ea0 addiu sp,sp,0xffe8
0x000a5ea4 lui asmTemp,0x8014
0x000a5ea8 sw ra,0x0014(sp)
0x000a5eac lw v0,-0x7ba0(asmTemp)
0x000a5eb0 nop
0x000a5eb4 bne v0,r0,0x000a5f50
0x000a5eb8 sw s0,0x0010(sp)
0x000a5ebc lui asmTemp,0x8014
0x000a5ec0 lh v0,-0x7b76(asmTemp)
0x000a5ec4 nop
0x000a5ec8 bgez v0,0x000a5f50
0x000a5ecc addu a1,v0,r0
0x000a5ed0 lhu v1,-0x6c24(gp)
0x000a5ed4 addiu v0,r0,0x00c8
0x000a5ed8 div v1,v0
0x000a5edc mfhi v0
0x000a5ee0 bne v0,r0,0x000a5f50
0x000a5ee4 addu a0,v1,r0
0x000a5ee8 lhu v0,-0x6c26(gp)
0x000a5eec nop
0x000a5ef0 beq a0,v0,0x000a5f50
0x000a5ef4 nop
0x000a5ef8 sll s0,a1,0x10
0x000a5efc bgez a1,0x000a5f10
0x000a5f00 sra s0,s0,0x10
0x000a5f04 sub v0,r0,a1
0x000a5f08 sll s0,v0,0x10
0x000a5f0c sra s0,s0,0x10
0x000a5f10 jal 0x000a36d4
0x000a5f14 addiu a0,r0,0x0064
0x000a5f18 sll v1,v0,0x10
0x000a5f1c lui asmTemp,0x8014
0x000a5f20 lh v0,-0x7b78(asmTemp)
0x000a5f24 sra v1,v1,0x10
0x000a5f28 sub v0,s0,v0
0x000a5f2c slt asmTemp,v1,v0
0x000a5f30 beq asmTemp,r0,0x000a5f50
0x000a5f34 nop
0x000a5f38 lui asmTemp,0x8014
0x000a5f3c lw v0,-0x7ba0(asmTemp)
0x000a5f40 nop
0x000a5f44 ori v0,v0,0x0010
0x000a5f48 lui asmTemp,0x8014
0x000a5f4c sw v0,-0x7ba0(asmTemp)
0x000a5f50 lui asmTemp,0x8014
0x000a5f54 lw v0,-0x7ba0(asmTemp)
0x000a5f58 nop
0x000a5f5c andi v0,v0,0x0010
0x000a5f60 beq v0,r0,0x000a61c4
0x000a5f64 nop
0x000a5f68 lhu v1,-0x6c24(gp)
0x000a5f6c addiu v0,r0,0x000f
0x000a5f70 div v1,v0
0x000a5f74 addu a0,v1,r0
0x000a5f78 mfhi v0
0x000a5f7c bne v0,r0,0x000a5fac
0x000a5f80 addu a1,v1,r0
0x000a5f84 lhu v0,-0x6c26(gp)
0x000a5f88 nop
0x000a5f8c beq a0,v0,0x000a5fac
0x000a5f90 nop
0x000a5f94 lui asmTemp,0x8014
0x000a5f98 lh v0,-0x7b76(asmTemp)
0x000a5f9c nop
0x000a5fa0 addi v0,v0,0x0001
0x000a5fa4 lui asmTemp,0x8014
0x000a5fa8 sh v0,-0x7b76(asmTemp)
0x000a5fac addiu v0,r0,0x012c
0x000a5fb0 div a1,v0
0x000a5fb4 mfhi v0
0x000a5fb8 bne v0,r0,0x000a61c4
0x000a5fbc nop
0x000a5fc0 lhu v0,-0x6c26(gp)
0x000a5fc4 nop
0x000a5fc8 beq a0,v0,0x000a61c4
0x000a5fcc nop
0x000a5fd0 lui v1,0x8015
0x000a5fd4 addiu v1,v1,0x57e0
0x000a5fd8 lh a2,0x0010(v1)
0x000a5fdc lui v0,0x51eb
0x000a5fe0 sll a0,a2,0x01
0x000a5fe4 ori v0,v0,0x851f
0x000a5fe8 mult v0,a0
0x000a5fec srl a1,a0,0x1f
0x000a5ff0 mfhi a0
0x000a5ff4 sra a0,a0,0x05
0x000a5ff8 addu a0,a0,a1
0x000a5ffc sll a0,a0,0x10
0x000a6000 sra a0,a0,0x10
0x000a6004 sub a0,a2,a0
0x000a6008 sh a0,0x0010(v1)
0x000a600c lh a2,0x0012(v1)
0x000a6010 addu a0,v0,r0
0x000a6014 sll a1,a2,0x01
0x000a6018 mult a0,a1
0x000a601c mfhi a0
0x000a6020 srl a1,a1,0x1f
0x000a6024 sra a0,a0,0x05
0x000a6028 addu a0,a0,a1
0x000a602c sll a0,a0,0x10
0x000a6030 sra a0,a0,0x10
0x000a6034 sub a0,a2,a0
0x000a6038 sh a0,0x0012(v1)
0x000a603c lh a2,0x0000(v1)
0x000a6040 addu a0,v0,r0
0x000a6044 sll a1,a2,0x01
0x000a6048 mult a0,a1
0x000a604c mfhi a0
0x000a6050 srl a1,a1,0x1f
0x000a6054 sra a0,a0,0x05
0x000a6058 addu a0,a0,a1
0x000a605c sll a0,a0,0x10
0x000a6060 sra a0,a0,0x10
0x000a6064 sub a0,a2,a0
0x000a6068 sh a0,0x0000(v1)
0x000a606c lh a2,0x0002(v1)
0x000a6070 addu a0,v0,r0
0x000a6074 sll a1,a2,0x01
0x000a6078 mult a0,a1
0x000a607c mfhi a0
0x000a6080 srl a1,a1,0x1f
0x000a6084 sra a0,a0,0x05
0x000a6088 addu a0,a0,a1
0x000a608c sll a0,a0,0x10
0x000a6090 sra a0,a0,0x10
0x000a6094 sub a0,a2,a0
0x000a6098 sh a0,0x0002(v1)
0x000a609c lh a2,0x0004(v1)
0x000a60a0 addu a0,v0,r0
0x000a60a4 sll a1,a2,0x01
0x000a60a8 mult a0,a1
0x000a60ac mfhi a0
0x000a60b0 srl a1,a1,0x1f
0x000a60b4 sra a0,a0,0x05
0x000a60b8 addu a0,a0,a1
0x000a60bc sll a0,a0,0x10
0x000a60c0 sra a0,a0,0x10
0x000a60c4 sub a0,a2,a0
0x000a60c8 sh a0,0x0004(v1)
0x000a60cc lh a1,0x0006(v1)
0x000a60d0 nop
0x000a60d4 sll a0,a1,0x01
0x000a60d8 mult v0,a0
0x000a60dc mfhi v0
0x000a60e0 srl a0,a0,0x1f
0x000a60e4 sra v0,v0,0x05
0x000a60e8 addu v0,v0,a0
0x000a60ec sll v0,v0,0x10
0x000a60f0 sra v0,v0,0x10
0x000a60f4 sub v0,a1,v0
0x000a60f8 sh v0,0x0006(v1)
0x000a60fc lh v0,0x0010(v1)
0x000a6100 nop
0x000a6104 bgtz v0,0x000a6114
0x000a6108 nop
0x000a610c addiu v0,r0,0x0001
0x000a6110 sh v0,0x0010(v1)
0x000a6114 lh v0,0x0012(v1)
0x000a6118 nop
0x000a611c bgtz v0,0x000a612c
0x000a6120 nop
0x000a6124 addiu v0,r0,0x0001
0x000a6128 sh v0,0x0012(v1)
0x000a612c lh v0,0x0000(v1)
0x000a6130 nop
0x000a6134 bgtz v0,0x000a6144
0x000a6138 nop
0x000a613c addiu v0,r0,0x0001
0x000a6140 sh v0,0x0000(v1)
0x000a6144 lh v0,0x0002(v1)
0x000a6148 nop
0x000a614c bgtz v0,0x000a615c
0x000a6150 nop
0x000a6154 addiu v0,r0,0x0001
0x000a6158 sh v0,0x0002(v1)
0x000a615c lh v0,0x0004(v1)
0x000a6160 nop
0x000a6164 bgtz v0,0x000a6174
0x000a6168 nop
0x000a616c addiu v0,r0,0x0001
0x000a6170 sh v0,0x0004(v1)
0x000a6174 lh v0,0x0006(v1)
0x000a6178 nop
0x000a617c bgtz v0,0x000a618c
0x000a6180 nop
0x000a6184 addiu v0,r0,0x0001
0x000a6188 sh v0,0x0006(v1)
0x000a618c lh v0,0x0010(v1)
0x000a6190 lh a0,0x0014(v1)
0x000a6194 nop
0x000a6198 slt asmTemp,a0,v0
0x000a619c bne asmTemp,r0,0x000a61a8
0x000a61a0 addu a1,v0,r0
0x000a61a4 sh a1,0x0014(v1)
0x000a61a8 lh v0,0x0012(v1)
0x000a61ac lh a0,0x0016(v1)
0x000a61b0 nop
0x000a61b4 slt asmTemp,a0,v0
0x000a61b8 bne asmTemp,r0,0x000a61c4
0x000a61bc addu a1,v0,r0
0x000a61c0 sh a1,0x0016(v1)
0x000a61c4 lui asmTemp,0x8014
0x000a61c8 lw v1,-0x7ba0(asmTemp)
0x000a61cc nop
0x000a61d0 andi v0,v1,0x0010
0x000a61d4 beq v0,r0,0x000a6220
0x000a61d8 nop
0x000a61dc lui asmTemp,0x8014
0x000a61e0 lh v0,-0x7b76(asmTemp)
0x000a61e4 nop
0x000a61e8 bltz v0,0x000a6220
0x000a61ec nop
0x000a61f0 addiu v0,r0,0xffef
0x000a61f4 and v0,v1,v0
0x000a61f8 lui asmTemp,0x8014
0x000a61fc sw v0,-0x7ba0(asmTemp)
0x000a6200 addiu v0,r0,0x0001
0x000a6204 lui asmTemp,0x8015
0x000a6208 lw a0,-0x6ecc(gp)
0x000a620c sb v0,0x57d7(asmTemp)
0x000a6210 jal 0x000e9fb4
0x000a6214 nop
0x000a6218 addiu v0,r0,0xffff
0x000a621c sw v0,-0x6ed8(gp)
0x000a6220 lw ra,0x0014(sp)
0x000a6224 lw s0,0x0010(sp)
0x000a6228 jr ra
0x000a622c addiu sp,sp,0x0018