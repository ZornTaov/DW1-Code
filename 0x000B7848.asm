void 0x000B7848(val1, val2) {
  for(i = 0; i < 8; i++) {
    if(load(0x12F344 + (i + 2) * 4) == 0 || load(0x155828 + i * 0x68 + 0x65) != val1)
      continue
      
    store(0x134D20 + i, val2)
    return
  }
}

0x000b7848 lui a2,0x8015
0x000b784c addiu a2,a2,0x5828
0x000b7850 addu a3,r0,r0
0x000b7854 beq r0,r0,0x000b78b0
0x000b7858 addiu t0,r0,0x0002
0x000b785c lui v0,0x8013
0x000b7860 sll v1,t0,0x02
0x000b7864 addiu v0,v0,0xf344
0x000b7868 addu v0,v0,v1
0x000b786c lw v0,0x0000(v0)
0x000b7870 nop
0x000b7874 bne v0,r0,0x000b7884
0x000b7878 nop
0x000b787c beq r0,r0,0x000b78a8
0x000b7880 addiu a2,a2,0x0068
0x000b7884 lbu v0,0x0065(a2)
0x000b7888 nop
0x000b788c bne v0,a0,0x000b78a4
0x000b7890 nop
0x000b7894 addiu v0,gp,0x91f4
0x000b7898 addu v0,v0,a3
0x000b789c beq r0,r0,0x000b78bc
0x000b78a0 sb a1,0x0000(v0)
0x000b78a4 addiu a2,a2,0x0068
0x000b78a8 addi a3,a3,0x0001
0x000b78ac addi t0,t0,0x0001
0x000b78b0 slti asmTemp,a3,0x0008
0x000b78b4 bne asmTemp,r0,0x000b785c
0x000b78b8 nop
0x000b78bc jr ra
0x000b78c0 nop