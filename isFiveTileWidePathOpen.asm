int isFiveTileWidePathOpen(tileX1, tileY1, tileX2, tileY2) {
  if(abs(tileX2 - tileX1) < abs(tileY2 - tileY1)) {
    for(i = -2; i < 3; i++)
      if(isLinearPathBlocked(tileX1, tileY1 + i, tileX2, tileY2 + i) != 0)
        break
  }
  else {
    for(i = -2; i < 3; i++)
      if(isLinearPathBlocked(tileX1 + i, tileY1, tileX2 + i, tileY2) != 0)
        break
  }
  
  if(i == 3)
    return 0
  
  return 1
}

0x000d3b44 addiu sp,sp,0xffd0
0x000d3b48 sw ra,0x002c(sp)
0x000d3b4c sw s6,0x0028(sp)
0x000d3b50 sw s5,0x0024(sp)
0x000d3b54 sw s4,0x0020(sp)
0x000d3b58 sw s3,0x001c(sp)
0x000d3b5c sw s2,0x0018(sp)
0x000d3b60 sw s1,0x0014(sp)
0x000d3b64 addu s4,a0,r0
0x000d3b68 addu s3,a2,r0
0x000d3b6c sw s0,0x0010(sp)
0x000d3b70 addu s6,a1,r0
0x000d3b74 addu s5,a3,r0
0x000d3b78 jal 0x0009119c
0x000d3b7c sub a0,s3,s4
0x000d3b80 addu s0,v0,r0
0x000d3b84 jal 0x0009119c
0x000d3b88 sub a0,s5,s6
0x000d3b8c slt asmTemp,s0,v0
0x000d3b90 bne asmTemp,r0,0x000d3bec
0x000d3b94 addiu s0,r0,0xfffe
0x000d3b98 addiu s0,r0,0xfffe
0x000d3b9c addi s2,s5,-0x0002
0x000d3ba0 beq r0,r0,0x000d3bd8
0x000d3ba4 addi s1,s6,-0x0002
0x000d3ba8 sll a1,s1,0x18
0x000d3bac sll a3,s2,0x18
0x000d3bb0 sra a1,a1,0x18
0x000d3bb4 sra a3,a3,0x18
0x000d3bb8 addu a0,s4,r0
0x000d3bbc jal 0x000d3c70
0x000d3bc0 addu a2,s3,r0
0x000d3bc4 bne v0,r0,0x000d3c34
0x000d3bc8 nop
0x000d3bcc addi s0,s0,0x0001
0x000d3bd0 addi s1,s1,0x0001
0x000d3bd4 addi s2,s2,0x0001
0x000d3bd8 slti asmTemp,s0,0x0003
0x000d3bdc bne asmTemp,r0,0x000d3ba8
0x000d3be0 nop
0x000d3be4 beq r0,r0,0x000d3c38
0x000d3be8 addiu asmTemp,r0,0x0003
0x000d3bec addi s2,s3,-0x0002
0x000d3bf0 beq r0,r0,0x000d3c28
0x000d3bf4 addi s1,s4,-0x0002
0x000d3bf8 sll a0,s1,0x18
0x000d3bfc sll a2,s2,0x18
0x000d3c00 sra a0,a0,0x18
0x000d3c04 sra a2,a2,0x18
0x000d3c08 addu a1,s6,r0
0x000d3c0c jal 0x000d3c70
0x000d3c10 addu a3,s5,r0
0x000d3c14 bne v0,r0,0x000d3c34
0x000d3c18 nop
0x000d3c1c addi s0,s0,0x0001
0x000d3c20 addi s1,s1,0x0001
0x000d3c24 addi s2,s2,0x0001
0x000d3c28 slti asmTemp,s0,0x0003
0x000d3c2c bne asmTemp,r0,0x000d3bf8
0x000d3c30 nop
0x000d3c34 addiu asmTemp,r0,0x0003
0x000d3c38 beq s0,asmTemp,0x000d3c48
0x000d3c3c addu v0,r0,r0
0x000d3c40 beq r0,r0,0x000d3c48
0x000d3c44 addiu v0,r0,0x0001
0x000d3c48 lw ra,0x002c(sp)
0x000d3c4c lw s6,0x0028(sp)
0x000d3c50 lw s5,0x0024(sp)
0x000d3c54 lw s4,0x0020(sp)
0x000d3c58 lw s3,0x001c(sp)
0x000d3c5c lw s2,0x0018(sp)
0x000d3c60 lw s1,0x0014(sp)
0x000d3c64 lw s0,0x0010(sp)
0x000d3c68 jr ra
0x000d3c6c addiu sp,sp,0x0030
