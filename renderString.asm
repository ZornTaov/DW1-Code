void renderString(stringPtr, xPos, yPos) {
  while(load(stringPtr) != 0) {
    if(isAsciiEncoded(stringPtr) != 0) {
      asciiChar = load(stringPtr++)
      
      if(asciiChar == 0x2E)
        charValue = 0x8142
      else if(asciiChar == 0x27)
        charValue = 0x8175
      else
        charValue = convertAsciiToGameChar(a0)
      
      charValue = swapBytes(charValue)
    }
    else {
      charValue = load(stringPtr++) << 8 | load(stringPtr++)
      charValue = swapBytes(charValue)
    }
    
    xPos += renderCharacter(charValue, xPos, yPos)
  }
}

0x0010cf24 addiu sp,sp,0xffe0
0x0010cf28 sw ra,0x001c(sp)
0x0010cf2c sw s2,0x0018(sp)
0x0010cf30 sw s1,0x0014(sp)
0x0010cf34 sw s0,0x0010(sp)
0x0010cf38 addu s0,a0,r0
0x0010cf3c addu s1,a1,r0
0x0010cf40 beq r0,r0,0x0010d00c
0x0010cf44 addu s2,a2,r0
0x0010cf48 jal 0x000f18a4
0x0010cf4c addu a0,s0,r0
0x0010cf50 beq v0,r0,0x0010cfac
0x0010cf54 nop
0x0010cf58 lb v0,0x0000(s0)
0x0010cf5c addiu asmTemp,r0,0x002e
0x0010cf60 bne v0,asmTemp,0x0010cf74
0x0010cf64 addu a0,v0,r0
0x0010cf68 ori v0,r0,0x8142
0x0010cf6c beq r0,r0,0x0010cf98
0x0010cf70 andi a0,v0,0xffff
0x0010cf74 addiu asmTemp,r0,0x0027
0x0010cf78 bne a0,asmTemp,0x0010cf8c
0x0010cf7c nop
0x0010cf80 ori v0,r0,0x8175
0x0010cf84 beq r0,r0,0x0010cf98
0x0010cf88 andi a0,v0,0xffff
0x0010cf8c jal 0x000f18c8
0x0010cf90 nop
0x0010cf94 andi a0,v0,0xffff
0x0010cf98 jal 0x000f1ab0
0x0010cf9c nop
0x0010cfa0 andi a0,v0,0xffff
0x0010cfa4 beq r0,r0,0x0010cff4
0x0010cfa8 addiu s0,s0,0x0001
0x0010cfac lb v0,0x0000(s0)
0x0010cfb0 nop
0x0010cfb4 andi a0,v0,0xffff
0x0010cfb8 addiu s0,s0,0x0001
0x0010cfbc lb v0,0x0000(s0)
0x0010cfc0 nop
0x0010cfc4 andi v1,v0,0xffff
0x0010cfc8 andi v0,a0,0x00ff
0x0010cfcc andi a0,v0,0xffff
0x0010cfd0 andi v0,v1,0x00ff
0x0010cfd4 andi v1,v0,0xffff
0x0010cfd8 sll v0,a0,0x08
0x0010cfdc andi a0,v0,0xffff
0x0010cfe0 or v0,a0,v1
0x0010cfe4 addiu s0,s0,0x0001
0x0010cfe8 jal 0x000f1ab0
0x0010cfec andi a0,v0,0xffff
0x0010cff0 andi a0,v0,0xffff
0x0010cff4 addu a1,s1,r0
0x0010cff8 jal 0x0010cc28
0x0010cffc addu a2,s2,r0
0x0010d000 andi v0,v0,0xffff
0x0010d004 addu v0,s1,v0
0x0010d008 andi s1,v0,0xffff
0x0010d00c lb v0,0x0000(s0)
0x0010d010 nop
0x0010d014 bne v0,r0,0x0010cf48
0x0010d018 nop
0x0010d01c lw ra,0x001c(sp)
0x0010d020 lw s2,0x0018(sp)
0x0010d024 lw s1,0x0014(sp)
0x0010d028 lw s0,0x0010(sp)
0x0010d02c jr ra
0x0010d030 addiu sp,sp,0x0020